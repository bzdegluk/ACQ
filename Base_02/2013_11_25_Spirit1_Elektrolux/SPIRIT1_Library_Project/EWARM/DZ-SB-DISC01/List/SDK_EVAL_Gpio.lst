###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Nov/2015  05:05:24
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Gpio.c
#    Command line =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Gpio.c
#        -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D STM32L1XX_MD -D
#        IAR_ARM_CM3 -D USE_FULL_ASSERT -D SPIRIT_USE_FULL_ASSERT -D
#        USE_SYSTICK_DELAY -D SDK -lC
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\
#        -o
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\.\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\examples\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\runtime\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SDK_Eval_Util\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device_Lib\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\SDK_EVAL_Gpio.lst
#    Object file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\SDK_EVAL_Gpio.o
#
###############################################################################

E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Gpio.c
      1          /**
      2           * @file     SDK_EVAL_Gpio.c
      3           * @author  High End Analog & RF BU - AMS / ART Team IMS-Systems Lab
      4           * @version V3.0.0
      5           * @date    August 7, 2012
      6           * @brief    This file provides all the low level API to manage SDK eval pin to drive GPIOs.
      7           * @details
      8           *
      9           * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10           * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     11           * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     12           * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     13           * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     14           * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15           *
     16           * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     17           * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     18           * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     19           *
     20           * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     21           *
     22           */
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "SDK_EVAL_Gpio.h"
     26          #include "SDK_EVAL_Config.h"
     27          
     28          /** @addtogroup SDK_EVAL_STM32L
     29           * @{
     30           */
     31          
     32          
     33          /** @addtogroup SDK_EVAL_Gpio
     34           * @{
     35           */
     36          
     37          
     38          /** @defgroup SDK_EVAL_Gpio_Private_TypesDefinitions             SDK EVAL Gpio Private Types Definitions
     39           * @{
     40           */
     41          
     42          
     43          /**
     44           * @}
     45           */
     46          
     47          
     48          
     49          
     50          /** @defgroup SDK_EVAL_Gpio_Private_Defines                      SDK EVAL Gpio Private Defines
     51           * @{
     52           */
     53          
     54          
     55          /**
     56           * @}
     57           */
     58          
     59          
     60          
     61          /** @defgroup SDK_EVAL_Gpio_Private_Macros                       SDK EVAL Gpio Private Macros
     62           * @{
     63           */
     64          
     65          
     66          /**
     67           * @}
     68           */
     69          
     70          
     71          
     72          /** @defgroup SDK_EVAL_Gpio_Private_Variables                    SDK EVAL Gpio Private Variables
     73           * @{
     74           */
     75          
     76          /**
     77           * @brief  M2S GPio Port array
     78           */
     79          

   \                                 In section .data, align 4
     80          GPIO_TypeDef* vectpxM2SGpioPort[2][M2S_GPIO_NUMBER] = {
   \                     vectpxM2SGpioPort:
   \   00000000   0x40020400         DC32 40020400H, 40020800H, 40020400H, 40020800H
   \              0x40020800   
   \              0x40020400   
   \              0x40020800   
     81            {M2S_GPIO_0_PORT_V_23,M2S_GPIO_SDN_PORT},
     82            {M2S_GPIO_0_PORT_V_D1,M2S_GPIO_SDN_PORT},
     83            
     84          };
     85          
     86          /**
     87           * @brief  M2S GPio Pin array
     88           */

   \                                 In section .rodata, align 4
     89          static const uint16_t s_vectnM2SGpioPin[M2S_GPIO_NUMBER] = {
   \                     s_vectnM2SGpioPin:
   \   00000000   0x0020 0x2000      DC16 32, 8192
     90                  M2S_GPIO_0_PIN,
     91                  M2S_GPIO_SDN_PIN
     92          };
     93          
     94          /**
     95           * @brief  M2S GPio Clock array
     96           */

   \                                 In section .rodata, align 4
     97          static const uint32_t s_vectlM2SGpioClk[2][M2S_GPIO_NUMBER] = {
   \                     s_vectlM2SGpioClk:
   \   00000000   0x00000002         DC32 2, 4, 2, 4
   \              0x00000004   
   \              0x00000002   
   \              0x00000004   
     98            {M2S_GPIO_0_RCC_PORT_V_23,M2S_GPIO_SDN_RCC_PORT},
     99            {M2S_GPIO_0_RCC_PORT_V_D1,M2S_GPIO_SDN_RCC_PORT},
    100          };
    101          
    102          
    103          /**
    104           * @brief  M2S GPio Speed array
    105           */

   \                                 In section .rodata, align 2
    106          static const GPIOSpeed_TypeDef s_vectxM2SGpioSpeed[M2S_GPIO_NUMBER] = {
   \                     s_vectxM2SGpioSpeed:
   \   00000000   0x03 0x03          DC8 3, 3
    107                  M2S_GPIO_0_SPEED,
    108                  M2S_GPIO_SDN_SPEED
    109          };
    110          
    111          /**
    112           * @brief  M2S GPio PuPd array
    113           */

   \                                 In section .rodata, align 2
    114          static const GPIOPuPd_TypeDef s_vectxM2SGpioPuPd[M2S_GPIO_NUMBER] = {
   \                     s_vectxM2SGpioPuPd:
   \   00000000   0x00 0x01          DC8 0, 1
    115                  M2S_GPIO_0_PUPD,
    116                  M2S_GPIO_SDN_PUPD
    117          };
    118          
    119          /**
    120           * @brief  M2S GPio Output Type array
    121           */

   \                                 In section .rodata, align 2
    122          static const GPIOOType_TypeDef s_vectxM2SGpioOType[M2S_GPIO_NUMBER] = {
   \                     s_vectxM2SGpioOType:
   \   00000000   0x00 0x00          DC8 0, 0
    123                  M2S_GPIO_0_OTYPE,
    124                  M2S_GPIO_SDN_OTYPE
    125          };
    126          
    127          /**
    128           * @brief  M2S Exti Line array
    129           */

   \                                 In section .rodata, align 4
    130          static const uint32_t s_vectlM2SExtiLine[M2S_GPIO_NUMBER-1] = {
   \                     s_vectlM2SExtiLine:
   \   00000000   0x00000020         DC32 32
    131                  M2S_GPIO_0_EXTI_LINE
    132          };
    133          
    134          /**
    135           * @brief  M2S Exti Port Source array
    136           */

   \                                 In section .rodata, align 2
    137          static const uint8_t s_vectcM2SGpioExtiPortSource[2][M2S_GPIO_NUMBER-1] = {
   \                     s_vectcM2SGpioExtiPortSource:
   \   00000000   0x01 0x01          DC8 1, 1
    138            {M2S_GPIO_0_EXTI_PORT_SOURCE_V_23},
    139            {M2S_GPIO_0_EXTI_PORT_SOURCE_V_D1}
    140          };
    141          
    142          /**
    143           * @brief  M2S Exti Pin Source array
    144           */

   \                                 In section .rodata, align 1
    145          static const uint8_t s_vectcM2SGpioExtiPinSource[M2S_GPIO_NUMBER-1] = {
   \                     s_vectcM2SGpioExtiPinSource:
   \   00000000   0x05               DC8 5
    146                  M2S_GPIO_0_EXTI_PIN_SOURCE
    147          };
    148          
    149          /**
    150           * @brief  M2S Exti Mode array
    151           */

   \                                 In section .rodata, align 1
    152          static const EXTIMode_TypeDef s_vectxM2sGpioExtiMode[M2S_GPIO_NUMBER-1] = {
   \                     s_vectxM2sGpioExtiMode:
   \   00000000   0x00               DC8 0
    153                  M2S_GPIO_0_EXTI_MODE
    154          };
    155          
    156          /**
    157           * @brief  M2S Exti Trigger array
    158           */

   \                                 In section .rodata, align 1
    159          static const EXTITrigger_TypeDef s_vectxM2SGpioExtiTrigger[M2S_GPIO_NUMBER-1] = {
   \                     s_vectxM2SGpioExtiTrigger:
   \   00000000   0x0C               DC8 12
    160                  M2S_GPIO_0_EXTI_TRIGGER
    161          };
    162          
    163          /**
    164           * @brief  M2S Exti IRQn array
    165           */

   \                                 In section .rodata, align 1
    166          static const uint8_t s_vectcM2SGpioExtiIrqn[M2S_GPIO_NUMBER-1] = {
   \                     s_vectcM2SGpioExtiIrqn:
   \   00000000   0x17               DC8 23
    167                  M2S_GPIO_0_EXTI_IRQN
    168          };
    169          
    170          
    171          /**
    172           * @}
    173           */
    174          
    175          
    176          
    177          /** @defgroup SDK_EVAL_Gpio_Private_FunctionPrototypes                   SDK EVAL Gpio Private Function Prototypes
    178           * @{
    179           */
    180          
    181          
    182          /**
    183           * @}
    184           */
    185          
    186          
    187          
    188          /** @defgroup SDK_EVAL_Gpio_Private_Functions                            SDK EVAL Gpio Private Functions
    189           * @{
    190           */
    191          
    192          /**
    193           * @brief  Configures MCU GPIO and EXTI Line for GPIOs.
    194           * @param  xGpio Specifies the GPIO to be configured.
    195           *         This parameter can be one of following parameters:
    196           *         @arg M2S_GPIO_0: GPIO_0
    197           *         @arg M2S_GPIO_SDN: GPIO_SDN
    198           * @param  xGpioMode Specifies GPIO mode.
    199           *         This parameter can be one of following parameters:
    200           *         @arg M2S_MODE_GPIO_IN: MCU GPIO will be used as simple input.
    201           *         @arg M2S_MODE_EXTI_IN: MCU GPIO will be connected to EXTI line with interrupt
    202           *         generation capability.
    203           *         @arg M2S_MODE_GPIO_OUT: MCU GPIO will be used as simple output.
    204           * @retval None.
    205           */

   \                                 In section .text, align 2, keep-with-next
    206          void SdkEvalM2SGpioInit(M2SGpioPin xGpio, M2SGpioMode xGpioMode)
    207          {
   \                     SdkEvalM2SGpioInit: (+1)
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    208            GPIO_InitTypeDef GPIO_InitStructure;
    209            EXTI_InitTypeDef EXTI_InitStructure;
    210            FunctionalState xExtiLine = DISABLE;
   \   00000006   0x2600             MOVS     R6,#+0
    211            
    212            /* Check the parameters */
    213            assert_param(IS_M2S_GPIO_PIN(xGpio));
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xD006             BEQ.N    ??SdkEvalM2SGpioInit_0
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C01             CMP      R4,#+1
   \   00000012   0xD003             BEQ.N    ??SdkEvalM2SGpioInit_0
   \   00000014   0x21D5             MOVS     R1,#+213
   \   00000016   0x....             LDR.N    R0,??DataTable5
   \   00000018   0x.... 0x....      BL       assert_failed
    214            assert_param(IS_M2S_GPIO_MODE(xGpioMode));
   \                     ??SdkEvalM2SGpioInit_0: (+1)
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D00             CMP      R5,#+0
   \   00000020   0xD009             BEQ.N    ??SdkEvalM2SGpioInit_1
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D01             CMP      R5,#+1
   \   00000026   0xD006             BEQ.N    ??SdkEvalM2SGpioInit_1
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x2D02             CMP      R5,#+2
   \   0000002C   0xD003             BEQ.N    ??SdkEvalM2SGpioInit_1
   \   0000002E   0x21D6             MOVS     R1,#+214
   \   00000030   0x....             LDR.N    R0,??DataTable5
   \   00000032   0x.... 0x....      BL       assert_failed
    215            
    216            
    217            /* Enables the MCU GPIO Clock */
    218            RCC_AHBPeriphClockCmd(s_vectlM2SGpioClk[SdkEvalGetVersion()>>1][xGpio], ENABLE);
   \                     ??SdkEvalM2SGpioInit_1: (+1)
   \   00000036   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000003A   0x2101             MOVS     R1,#+1
   \   0000003C   0x....             LDR.N    R2,??DataTable5_1
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x1040             ASRS     R0,R0,#+1
   \   00000042   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   00000046   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000048   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000004C   0x.... 0x....      BL       RCC_AHBPeriphClockCmd
    219            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
   \   00000050   0x2101             MOVS     R1,#+1
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
    220            
    221            /* Configures MCU GPIO */
    222            if(xGpioMode == M2S_MODE_GPIO_OUT)
   \   00000058   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005A   0x2D02             CMP      R5,#+2
   \   0000005C   0xD103             BNE.N    ??SdkEvalM2SGpioInit_2
    223              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   00000064   0xE002             B.N      ??SdkEvalM2SGpioInit_3
    224            else
    225              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \                     ??SdkEvalM2SGpioInit_2: (+1)
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0xF88D 0x0004      STRB     R0,[SP, #+4]
    226            
    227            GPIO_InitStructure.GPIO_PuPd = s_vectxM2SGpioPuPd[xGpio];
   \                     ??SdkEvalM2SGpioInit_3: (+1)
   \   0000006C   0x....             LDR.N    R0,??DataTable5_2
   \   0000006E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000070   0x5C20             LDRB     R0,[R4, R0]
   \   00000072   0xF88D 0x0007      STRB     R0,[SP, #+7]
    228            GPIO_InitStructure.GPIO_Speed = s_vectxM2SGpioSpeed[xGpio];
   \   00000076   0x....             LDR.N    R0,??DataTable5_3
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x5C20             LDRB     R0,[R4, R0]
   \   0000007C   0xF88D 0x0005      STRB     R0,[SP, #+5]
    229            GPIO_InitStructure.GPIO_OType = s_vectxM2SGpioOType[xGpio];
   \   00000080   0x....             LDR.N    R0,??DataTable5_4
   \   00000082   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000084   0x5C20             LDRB     R0,[R4, R0]
   \   00000086   0xF88D 0x0006      STRB     R0,[SP, #+6]
    230            GPIO_InitStructure.GPIO_Pin = s_vectnM2SGpioPin[xGpio];
   \   0000008A   0x....             LDR.N    R0,??DataTable5_5
   \   0000008C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008E   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000092   0x9000             STR      R0,[SP, #+0]
    231            GPIO_Init(vectpxM2SGpioPort[SdkEvalGetVersion()>>1][xGpio], &GPIO_InitStructure);
   \   00000094   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000098   0xA900             ADD      R1,SP,#+0
   \   0000009A   0x....             LDR.N    R2,??DataTable5_6
   \   0000009C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   0x1040             ASRS     R0,R0,#+1
   \   000000A0   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   000000A4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A6   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000AA   0x.... 0x....      BL       GPIO_Init
    232            
    233            /* Configures MCU GPIO EXTI line */
    234            EXTI_InitStructure.EXTI_Line = s_vectlM2SExtiLine[xGpio];
   \   000000AE   0x....             LDR.N    R0,??DataTable5_7
   \   000000B0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B2   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000B6   0x9002             STR      R0,[SP, #+8]
    235            EXTI_InitStructure.EXTI_Mode = s_vectxM2sGpioExtiMode[xGpio];
   \   000000B8   0x....             LDR.N    R0,??DataTable5_8
   \   000000BA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BC   0x5C20             LDRB     R0,[R4, R0]
   \   000000BE   0xF88D 0x000C      STRB     R0,[SP, #+12]
    236            EXTI_InitStructure.EXTI_Trigger = s_vectxM2SGpioExtiTrigger[xGpio];
   \   000000C2   0x....             LDR.N    R0,??DataTable5_9
   \   000000C4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C6   0x5C20             LDRB     R0,[R4, R0]
   \   000000C8   0xF88D 0x000D      STRB     R0,[SP, #+13]
    237            EXTI_InitStructure.EXTI_LineCmd = xExtiLine;
   \   000000CC   0xF88D 0x600E      STRB     R6,[SP, #+14]
    238            
    239            if (xGpioMode == M2S_MODE_EXTI_IN)
   \   000000D0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D2   0x2D01             CMP      R5,#+1
   \   000000D4   0xD10F             BNE.N    ??SdkEvalM2SGpioInit_4
    240            {
    241              /* Connects EXTI Line to MCU GPIO Pin */
    242              SYSCFG_EXTILineConfig(s_vectcM2SGpioExtiPortSource[SdkEvalGetVersion()>>1][xGpio], s_vectcM2SGpioExtiPinSource[xGpio]);
   \   000000D6   0x.... 0x....      BL       SdkEvalGetVersion
   \   000000DA   0x....             LDR.N    R1,??DataTable5_10
   \   000000DC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DE   0x5C61             LDRB     R1,[R4, R1]
   \   000000E0   0x....             LDR.N    R2,??DataTable5_11
   \   000000E2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000E4   0xEB12 0x0060      ADDS     R0,R2,R0, ASR #+1
   \   000000E8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000EA   0x5C20             LDRB     R0,[R4, R0]
   \   000000EC   0x.... 0x....      BL       SYSCFG_EXTILineConfig
    243              EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \   000000F0   0x2001             MOVS     R0,#+1
   \   000000F2   0xF88D 0x000E      STRB     R0,[SP, #+14]
    244          
    245            }
    246            if(xGpio != M2S_GPIO_SDN) {
   \                     ??SdkEvalM2SGpioInit_4: (+1)
   \   000000F6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F8   0x2C01             CMP      R4,#+1
   \   000000FA   0xD002             BEQ.N    ??SdkEvalM2SGpioInit_5
    247              EXTI_Init(&EXTI_InitStructure);
   \   000000FC   0xA802             ADD      R0,SP,#+8
   \   000000FE   0x.... 0x....      BL       EXTI_Init
    248            }
    249          
    250          }
   \                     ??SdkEvalM2SGpioInit_5: (+1)
   \   00000102   0xBD7F             POP      {R0-R6,PC}       ;; return
    251          
    252          
    253          /**
    254           * @brief  Enables or disables the interrupt on GPIO .
    255           * @param  xGpio Specifies the GPIO whose priority shall be changed.
    256           *         This parameter can be one of following parameters:
    257           *         @arg M2S_GPIO_0: GPIO_0
    258           * @param  nPreemption Specifies Preemption Priority.
    259           * @param  nSubpriority Specifies Subgroup Priority.
    260           * @param  xNewState Specifies the State.
    261           *         This parameter can be one of following parameters:
    262           *         @arg ENABLE: Interrupt is enabled
    263           *         @arg DISABLE: Interrupt is disabled
    264           * @retval None.
    265           */

   \                                 In section .text, align 2, keep-with-next
    266          void SdkEvalM2SGpioInterruptCmd(M2SGpioPin xGpio, uint8_t nPreemption, uint8_t nSubpriority, FunctionalState xNewState)
    267          {
   \                     SdkEvalM2SGpioInterruptCmd: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
    268            NVIC_InitTypeDef NVIC_InitStructure;
    269          
    270            /* Enables or Disables EXTI Interrupt to the specified priority */
    271            NVIC_InitStructure.NVIC_IRQChannel = s_vectcM2SGpioExtiIrqn[xGpio];
   \   0000000A   0x....             LDR.N    R0,??DataTable5_12
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x5C20             LDRB     R0,[R4, R0]
   \   00000010   0xF88D 0x0000      STRB     R0,[SP, #+0]
    272            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = nPreemption;
   \   00000014   0xF88D 0x5001      STRB     R5,[SP, #+1]
    273            NVIC_InitStructure.NVIC_IRQChannelSubPriority = nSubpriority;
   \   00000018   0xF88D 0x6002      STRB     R6,[SP, #+2]
    274            NVIC_InitStructure.NVIC_IRQChannelCmd = xNewState;
   \   0000001C   0xF88D 0x7003      STRB     R7,[SP, #+3]
    275          
    276            NVIC_Init(&NVIC_InitStructure);
   \   00000020   0xA800             ADD      R0,SP,#+0
   \   00000022   0x.... 0x....      BL       NVIC_Init
    277          
    278          }
   \   00000026   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    279          
    280          
    281          /**
    282           * @brief  Returns the level of a specified GPIO.
    283           * @param  xGpio Specifies the GPIO to be read.
    284           *         This parameter can be one of following parameters:
    285           *         @arg M2S_GPIO_0: GPIO_0
    286           * @retval FlagStatus Level of the GPIO. This parameter can be:
    287           *         SET or RESET.
    288           */

   \                                 In section .text, align 2, keep-with-next
    289          FlagStatus SdkEvalGpioGetLevel(M2SGpioPin xGpio)
    290          {
   \                     SdkEvalGpioGetLevel: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    291            /* Gets the GPIO level */
    292            uint16_t nDataPort = GPIO_ReadInputData(vectpxM2SGpioPort[SdkEvalGetVersion()>>1][xGpio]);
   \   00000004   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000008   0x....             LDR.N    R1,??DataTable5_6
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x1040             ASRS     R0,R0,#+1
   \   0000000E   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000018   0x.... 0x....      BL       GPIO_ReadInputData
   \   0000001C   0x0001             MOVS     R1,R0
    293            if(nDataPort & s_vectnM2SGpioPin[xGpio])
   \   0000001E   0x....             LDR.N    R0,??DataTable5_5
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000026   0x4201             TST      R1,R0
   \   00000028   0xD001             BEQ.N    ??SdkEvalGpioGetLevel_0
    294              return SET;
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0xE000             B.N      ??SdkEvalGpioGetLevel_1
    295            else
    296              return RESET;
   \                     ??SdkEvalGpioGetLevel_0: (+1)
   \   0000002E   0x2000             MOVS     R0,#+0
   \                     ??SdkEvalGpioGetLevel_1: (+1)
   \   00000030   0xBD10             POP      {R4,PC}          ;; return
    297            
    298          }
    299          
    300          /**
    301           * @brief  Sets the level of a specified GPIO.
    302           * @param  xGpio Specifies the GPIO to be set.
    303           *         This parameter can be one of following parameters:
    304           *         @arg M2S_GPIO_0: GPIO_0
    305           * @param  FlagStatus Level of the GPIO. This parameter can be:
    306           *         SET or RESET.
    307           * @retval None.
    308           */

   \                                 In section .text, align 2, keep-with-next
    309          void SdkEvalGpioSetLevel(M2SGpioPin xGpio, FlagStatus xLevel)
    310          {
   \                     SdkEvalGpioSetLevel: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    311            /* Sets the GPIO level */
    312            GPIO_WriteBit(vectpxM2SGpioPort[SdkEvalGetVersion()>>1][xGpio], s_vectnM2SGpioPin[xGpio], (BitAction)xLevel);
   \   00000006   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000000A   0x002A             MOVS     R2,R5
   \   0000000C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000E   0x....             LDR.N    R1,??DataTable5_5
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xF831 0x1014      LDRH     R1,[R1, R4, LSL #+1]
   \   00000016   0x....             LDR.N    R3,??DataTable5_6
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x1040             ASRS     R0,R0,#+1
   \   0000001C   0xEB13 0x00C0      ADDS     R0,R3,R0, LSL #+3
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000026   0x.... 0x....      BL       GPIO_WriteBit
    313          
    314            
    315          }
   \   0000002A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    316          
    317          /**
    318           * @brief  Puts at logic 1 the SDN pin.
    319           * @param  None.
    320           * @retval None.
    321           */

   \                                 In section .text, align 2, keep-with-next
    322          void SdkEvalEnterShutdown(void)
    323          {
   \                     SdkEvalEnterShutdown: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    324            /* Puts high the GPIO connected to shutdown pin */
    325            GPIO_SetBits(M2S_GPIO_SDN_PORT, M2S_GPIO_SDN_PIN);
   \   00000002   0xF44F 0x5100      MOV      R1,#+8192
   \   00000006   0x....             LDR.N    R0,??DataTable5_13  ;; 0x40020800
   \   00000008   0x.... 0x....      BL       GPIO_SetBits
    326          }
   \   0000000C   0xBD01             POP      {R0,PC}          ;; return
    327          
    328          
    329          /**
    330           * @brief  Put at logic 0 the SDN pin.
    331           * @param  None.
    332           * @retval None.
    333           */

   \                                 In section .text, align 2, keep-with-next
    334          void SdkEvalExitShutdown(void)
    335          {
   \                     SdkEvalExitShutdown: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    336            /* Puts low the GPIO connected to shutdown pin */
    337            GPIO_ResetBits(M2S_GPIO_SDN_PORT, M2S_GPIO_SDN_PIN);
   \   00000002   0xF44F 0x5100      MOV      R1,#+8192
   \   00000006   0x....             LDR.N    R0,??DataTable5_13  ;; 0x40020800
   \   00000008   0x.... 0x....      BL       GPIO_ResetBits
    338          
    339            /* Delay to allow the circuit POR, about 700 us */
    340            for(volatile uint32_t i=0;i<0x1E00;i++);
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \                     ??SdkEvalExitShutdown_0: (+1)
   \   00000010   0x9800             LDR      R0,[SP, #+0]
   \   00000012   0xF5B0 0x5FF0      CMP      R0,#+7680
   \   00000016   0xD203             BCS.N    ??SdkEvalExitShutdown_1
   \   00000018   0x9800             LDR      R0,[SP, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x9000             STR      R0,[SP, #+0]
   \   0000001E   0xE7F7             B.N      ??SdkEvalExitShutdown_0
    341          }
   \                     ??SdkEvalExitShutdown_1: (+1)
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
    342          

   \                                 In section .text, align 2, keep-with-next
    343          FlagStatus SdkEvalCheckShutdown(void)
    344          {
   \                     SdkEvalCheckShutdown: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    345            return SdkEvalGpioGetLevel(M2S_GPIO_SDN);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       SdkEvalGpioGetLevel
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
    346          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     s_vectlM2SGpioClk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     s_vectxM2SGpioPuPd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     s_vectxM2SGpioSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     s_vectxM2SGpioOType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     s_vectnM2SGpioPin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     vectpxM2SGpioPort

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     s_vectlM2SExtiLine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     s_vectxM2sGpioExtiMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     s_vectxM2SGpioExtiTrigger

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     s_vectcM2SGpioExtiPinSource

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     s_vectcM2SGpioExtiPortSource

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     s_vectcM2SGpioExtiIrqn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x45 0x3A          DC8 45H, 3AH, 5CH, 41H, 43H, 51H, 5CH, 50H
   \              0x5C 0x41    
   \              0x43 0x51    
   \              0x5C 0x50    
   \   00000008   0x72 0x6F          DC8 72H, 6FH, 6AH, 5FH, 76H, 65H, 72H, 30H
   \              0x6A 0x5F    
   \              0x76 0x65    
   \              0x72 0x30    
   \   00000010   0x39 0x61          DC8 39H, 61H, 5FH, 31H, 35H, 31H, 30H, 32H
   \              0x5F 0x31    
   \              0x35 0x31    
   \              0x30 0x32    
   \   00000018   0x30 0x31          DC8 30H, 31H, 35H, 5CH, 42H, 61H, 73H, 65H
   \              0x35 0x5C    
   \              0x42 0x61    
   \              0x73 0x65    
   \   00000020   0x5F 0x30          DC8 5FH, 30H, 32H, 5CH, 32H, 30H, 31H, 33H
   \              0x32 0x5C    
   \              0x32 0x30    
   \              0x31 0x33    
   \   00000028   0x5F 0x31          DC8 5FH, 31H, 31H, 5FH, 32H, 35H, 5FH, 53H
   \              0x31 0x5F    
   \              0x32 0x35    
   \              0x5F 0x53    
   \   00000030   0x70 0x69          DC8 70H, 69H, 72H, 69H, 74H, 31H, 5FH, 45H
   \              0x72 0x69    
   \              0x74 0x31    
   \              0x5F 0x45    
   \   00000038   0x6C 0x65          DC8 6CH, 65H, 6BH, 74H, 72H, 6FH, 6CH, 75H
   \              0x6B 0x74    
   \              0x72 0x6F    
   \              0x6C 0x75    
   \   00000040   0x78 0x5C          DC8 78H, 5CH, 53H, 54H, 4DH, 33H, 32H, 4CH
   \              0x53 0x54    
   \              0x4D 0x33    
   \              0x32 0x4C    
   \   00000048   0x5C 0x53          DC8 5CH, 53H, 44H, 4BH, 5FH, 45H, 76H, 61H
   \              0x44 0x4B    
   \              0x5F 0x45    
   \              0x76 0x61    
   \   00000050   0x6C 0x5F          DC8 6CH, 5FH, 53H, 54H, 4DH, 33H, 32H, 4CH
   \              0x53 0x54    
   \              0x4D 0x33    
   \              0x32 0x4C    
   \   00000058   0x5C 0x53          DC8 5CH, 53H, 6FH, 75H, 72H, 63H, 65H, 5CH
   \              0x6F 0x75    
   \              0x72 0x63    
   \              0x65 0x5C    
   \   00000060   0x73 0x72          DC8 73H, 72H, 63H, 5CH, 53H, 44H, 4BH, 5FH
   \              0x63 0x5C    
   \              0x53 0x44    
   \              0x4B 0x5F    
   \   00000068   0x45 0x56          DC8 45H, 56H, 41H, 4CH, 5FH, 47H, 70H, 69H
   \              0x41 0x4C    
   \              0x5F 0x47    
   \              0x70 0x69    
   \   00000070   0x6F 0x2E          DC8 6FH, 2EH, 63H, 0
   \              0x63 0x00    
    347          
    348          /**
    349           * @}
    350           */
    351          
    352          
    353          
    354          /**
    355           * @}
    356           */
    357          
    358          
    359          
    360          /**
    361           * @}
    362           */
    363          
    364          
    365          
    366          /******************* (C) COPYRIGHT 2012 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SdkEvalCheckShutdown
         8   -> SdkEvalGpioGetLevel
       8   SdkEvalEnterShutdown
         8   -> GPIO_SetBits
       8   SdkEvalExitShutdown
         8   -> GPIO_ResetBits
       8   SdkEvalGpioGetLevel
         8   -> GPIO_ReadInputData
         8   -> SdkEvalGetVersion
      16   SdkEvalGpioSetLevel
        16   -> GPIO_WriteBit
        16   -> SdkEvalGetVersion
      32   SdkEvalM2SGpioInit
        32   -> EXTI_Init
        32   -> GPIO_Init
        32   -> RCC_AHBPeriphClockCmd
        32   -> RCC_APB2PeriphClockCmd
        32   -> SYSCFG_EXTILineConfig
        32   -> SdkEvalGetVersion
        32   -> assert_failed
      24   SdkEvalM2SGpioInterruptCmd
        24   -> NVIC_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
     116  ?_0
      10  SdkEvalCheckShutdown
      14  SdkEvalEnterShutdown
      34  SdkEvalExitShutdown
      50  SdkEvalGpioGetLevel
      44  SdkEvalGpioSetLevel
     260  SdkEvalM2SGpioInit
      40  SdkEvalM2SGpioInterruptCmd
       1  s_vectcM2SGpioExtiIrqn
       1  s_vectcM2SGpioExtiPinSource
       2  s_vectcM2SGpioExtiPortSource
       4  s_vectlM2SExtiLine
      16  s_vectlM2SGpioClk
       4  s_vectnM2SGpioPin
       1  s_vectxM2SGpioExtiTrigger
       2  s_vectxM2SGpioOType
       2  s_vectxM2SGpioPuPd
       2  s_vectxM2SGpioSpeed
       1  s_vectxM2sGpioExtiMode
      16  vectpxM2SGpioPort

 
  16 bytes in section .data
 152 bytes in section .rodata
 508 bytes in section .text
 
 508 bytes of CODE  memory
 152 bytes of CONST memory
  16 bytes of DATA  memory

Errors: none
Warnings: none
