###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Nov/2015  05:05:25
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Led.c
#    Command line =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Led.c
#        -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D STM32L1XX_MD -D
#        IAR_ARM_CM3 -D USE_FULL_ASSERT -D SPIRIT_USE_FULL_ASSERT -D
#        USE_SYSTICK_DELAY -D SDK -lC
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\
#        -o
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\.\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\examples\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\runtime\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SDK_Eval_Util\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device_Lib\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\SDK_EVAL_Led.lst
#    Object file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\SDK_EVAL_Led.o
#
###############################################################################

E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Led.c
      1          /**
      2           * @file    SDK_EVAL_Led.c
      3           * @author  DiZiC Ltd.
      4           * @version V3.0.0
      5           * @date    August 10, 2013
      6           * @brief   This file provides all the low level API to manage SDK LEDs.
      7           * @details
      8           *
      9           * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10           * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     11           * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     12           * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     13           * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     14           * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15           *
     16           * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     17           * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     18           * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     19           *
     20           * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     21           */
     22          
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "SDK_EVAL_Led.h"
     26          #include "SDK_EVAL_Config.h"
     27          
     28          /** @addtogroup SDK_EVAL_STM32L
     29           * @{
     30           */
     31          
     32          
     33          /** @addtogroup SDK_EVAL_Led
     34           * @{
     35           */
     36          
     37          /** @defgroup SDK_EVAL_Led_Private_TypesDefinitions             SDK EVAL Led Private Types Definitions
     38           * @{
     39           */
     40          
     41          /**
     42           * @}
     43           */
     44          
     45          
     46          /** @defgroup SDK_EVAL_Led_Private_Defines                      SDK EVAL Led Private Defines
     47           * @{
     48           */
     49          
     50          /**
     51           * @}
     52           */
     53          
     54          
     55          /** @defgroup SDK_EVAL_Led_Private_Macros                       SDK EVAL Led Private Macros
     56           * @{
     57           */
     58          
     59          /**
     60           * @}
     61           */
     62          
     63          
     64          /** @defgroup SDK_EVAL_Led_Private_Variables                    SDK EVAL Led Private Variables
     65           * @{
     66           */

   \                                 In section .data, align 4
     67          GPIO_TypeDef* vectpxGpioPortVersion[3][LEDn] = {
   \                     vectpxGpioPortVersion:
   \   00000000   0x40020C00         DC32 40020C00H, 40020C00H, 40020400H, 40020400H, 40020400H, 40020400H
   \              0x40020C00   
   \              0x40020400   
   \              0x40020400   
   \              0x40020400   
   \              0x40020400   
     68            {SDK_EVAL_V2_LED1_GPIO_PORT, SDK_EVAL_V2_LED2_GPIO_PORT},
     69            {SDK_EVAL_V3_LED1_GPIO_PORT, SDK_EVAL_V3_LED2_GPIO_PORT},
     70            {SDK_DONGLE_V1_LED1_GPIO_PORT, SDK_DONGLE_V1_LED2_GPIO_PORT}
     71           };
     72           

   \                                 In section .rodata, align 4
     73          static const uint16_t s_vectnGpioPinVersion[3][LEDn] = {
   \                     s_vectnGpioPinVersion:
   \   00000000   0x0001 0x0002      DC16 1, 2, 1024, 2048, 1024, 2048
   \              0x0400 0x0800
   \              0x0400 0x0800
     74            {SDK_EVAL_V2_LED1_PIN, SDK_EVAL_V2_LED2_PIN},
     75            {SDK_EVAL_V3_LED1_PIN, SDK_EVAL_V3_LED2_PIN},
     76            {SDK_DONGLE_V1_LED1_PIN, SDK_DONGLE_V1_LED2_PIN}
     77          };
     78          

   \                                 In section .rodata, align 4
     79          static const uint32_t s_vectlGpioClkVersion[3][LEDn] = {
   \                     s_vectlGpioClkVersion:
   \   00000000   0x00000008         DC32 8, 8, 2, 2, 2, 2
   \              0x00000008   
   \              0x00000002   
   \              0x00000002   
   \              0x00000002   
   \              0x00000002   
     80            {SDK_EVAL_V2_LED1_GPIO_CLK, SDK_EVAL_V2_LED2_GPIO_CLK},
     81            {SDK_EVAL_V3_LED1_GPIO_CLK, SDK_EVAL_V3_LED2_GPIO_CLK},
     82            {SDK_DONGLE_V1_LED1_GPIO_CLK, SDK_DONGLE_V1_LED2_GPIO_CLK}
     83          };
     84          
     85          

   \                                 In section .bss, align 4
     86          static GPIO_TypeDef** vectpxGpioPort;
   \                     vectpxGpioPort:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     87          static uint16_t* s_vectnGpioPin;
   \                     s_vectnGpioPin:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     88          static uint32_t* s_vectlGpioClk;
   \                     s_vectlGpioClk:
   \   00000000                      DS8 4
     89          
     90          /**
     91           * @}
     92           */
     93          
     94          
     95          /**
     96           * @defgroup SDK_EVAL_Led_Private_FunctionPrototypes                    SDK EVAL Led Private Function Prototypes
     97           * @{
     98           */
     99          
    100          /**
    101           * @}
    102           */
    103          
    104          
    105          /**
    106           * @defgroup SDK_EVAL_Led_Private_Functions                             SDK EVAL Led Private Functions
    107           * @{
    108           */
    109          
    110          
    111          /**
    112           * @brief  Configures LED GPIO.
    113           * @param  xLed Specifies the Led to be configured.
    114           *         This parameter can be one of following parameters:
    115           *         @arg LED1
    116           *         @arg LED2
    117           * @retval None.
    118           */

   \                                 In section .text, align 2, keep-with-next
    119          void SdkEvalLedInit(SdkEvalLed xLed)
    120          {
   \                     SdkEvalLedInit: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    121            vectpxGpioPort = vectpxGpioPortVersion[SdkEvalGetVersion()];
   \   00000004   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000008   0x....             LDR.N    R1,??DataTable5
   \   0000000A   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   0000000E   0x....             LDR.N    R1,??DataTable5_1
   \   00000010   0x6008             STR      R0,[R1, #+0]
    122            s_vectnGpioPin = (uint16_t *)s_vectnGpioPinVersion[SdkEvalGetVersion()];
   \   00000012   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000016   0x....             LDR.N    R1,??DataTable5_2
   \   00000018   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   0000001C   0x....             LDR.N    R1,??DataTable5_3
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    123            s_vectlGpioClk = (uint32_t *)s_vectlGpioClkVersion[SdkEvalGetVersion()];
   \   00000020   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000024   0x....             LDR.N    R1,??DataTable5_4
   \   00000026   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   0000002A   0x....             LDR.N    R1,??DataTable5_5
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    124          
    125            GPIO_InitTypeDef  GPIO_InitStructure;
    126            
    127            /* Enable the GPIO_LED Clock */
    128            RCC_AHBPeriphClockCmd(s_vectlGpioClk[xLed], ENABLE);
   \   0000002E   0x2101             MOVS     R1,#+1
   \   00000030   0x....             LDR.N    R0,??DataTable5_5
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000003A   0x.... 0x....      BL       RCC_AHBPeriphClockCmd
    129            
    130            /* Configure the GPIO_LED pin */
    131            GPIO_InitStructure.GPIO_Pin = s_vectnGpioPin[xLed];
   \   0000003E   0x....             LDR.N    R0,??DataTable5_3
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000044   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000048   0x9000             STR      R0,[SP, #+0]
    132            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    133            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0xF88D 0x0006      STRB     R0,[SP, #+6]
    134            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0xF88D 0x0007      STRB     R0,[SP, #+7]
    135            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
   \   0000005C   0x2003             MOVS     R0,#+3
   \   0000005E   0xF88D 0x0005      STRB     R0,[SP, #+5]
    136            GPIO_Init(vectpxGpioPort[xLed], &GPIO_InitStructure);
   \   00000062   0xA900             ADD      R1,SP,#+0
   \   00000064   0x....             LDR.N    R0,??DataTable5_1
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006A   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000006E   0x.... 0x....      BL       GPIO_Init
    137            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_2_1 || SdkEvalGetVersion() == SDK_EVAL_VERSION_3 )
   \   00000072   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD003             BEQ.N    ??SdkEvalLedInit_0
   \   0000007A   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000007E   0x2801             CMP      R0,#+1
   \   00000080   0xD10A             BNE.N    ??SdkEvalLedInit_1
    138              vectpxGpioPort[xLed]->BSRRL = s_vectnGpioPin[xLed];
   \                     ??SdkEvalLedInit_0: (+1)
   \   00000082   0x....             LDR.N    R0,??DataTable5_3
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000088   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000008C   0x....             LDR.N    R1,??DataTable5_1
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000092   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   00000096   0x8308             STRH     R0,[R1, #+24]
    139            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_D1)
   \                     ??SdkEvalLedInit_1: (+1)
   \   00000098   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000009C   0x2802             CMP      R0,#+2
   \   0000009E   0xD10A             BNE.N    ??SdkEvalLedInit_2
    140             vectpxGpioPort[xLed]->BSRRL = s_vectnGpioPin[xLed]; //*** Set pin High
   \   000000A0   0x....             LDR.N    R0,??DataTable5_3
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A6   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   000000AA   0x....             LDR.N    R1,??DataTable5_1
   \   000000AC   0x6809             LDR      R1,[R1, #+0]
   \   000000AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B0   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   000000B4   0x8308             STRH     R0,[R1, #+24]
    141          }
   \                     ??SdkEvalLedInit_2: (+1)
   \   000000B6   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    142          

   \                                 In section .text, align 2, keep-with-next
    143          void SdkEvalLedInitPWM(SdkEvalLed xLed)
    144          {
   \                     SdkEvalLedInitPWM: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    145            vectpxGpioPort = vectpxGpioPortVersion[SdkEvalGetVersion()];
   \   00000004   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000008   0x....             LDR.N    R1,??DataTable5
   \   0000000A   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   0000000E   0x....             LDR.N    R1,??DataTable5_1
   \   00000010   0x6008             STR      R0,[R1, #+0]
    146            s_vectnGpioPin = (uint16_t *)s_vectnGpioPinVersion[SdkEvalGetVersion()];
   \   00000012   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000016   0x....             LDR.N    R1,??DataTable5_2
   \   00000018   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   0000001C   0x....             LDR.N    R1,??DataTable5_3
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    147            s_vectlGpioClk = (uint32_t *)s_vectlGpioClkVersion[SdkEvalGetVersion()];
   \   00000020   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000024   0x....             LDR.N    R1,??DataTable5_4
   \   00000026   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   0000002A   0x....             LDR.N    R1,??DataTable5_5
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    148          
    149            GPIO_InitTypeDef  GPIO_InitStructure;
    150            
    151            /* Enable the GPIO_LED Clock */
    152            RCC_AHBPeriphClockCmd(s_vectlGpioClk[xLed], ENABLE);
   \   0000002E   0x2101             MOVS     R1,#+1
   \   00000030   0x....             LDR.N    R0,??DataTable5_5
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000003A   0x.... 0x....      BL       RCC_AHBPeriphClockCmd
    153            
    154            /* Configure the GPIO_LED pin */
    155            GPIO_InitStructure.GPIO_Pin = s_vectnGpioPin[xLed];
   \   0000003E   0x....             LDR.N    R0,??DataTable5_3
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000044   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000048   0x9000             STR      R0,[SP, #+0]
    156            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   0000004A   0x2002             MOVS     R0,#+2
   \   0000004C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    157            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0xF88D 0x0006      STRB     R0,[SP, #+6]
    158            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0xF88D 0x0007      STRB     R0,[SP, #+7]
    159            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
   \   0000005C   0x2003             MOVS     R0,#+3
   \   0000005E   0xF88D 0x0005      STRB     R0,[SP, #+5]
    160             GPIO_Init(vectpxGpioPort[xLed], &GPIO_InitStructure);
   \   00000062   0xA900             ADD      R1,SP,#+0
   \   00000064   0x....             LDR.N    R0,??DataTable5_1
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006A   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000006E   0x.... 0x....      BL       GPIO_Init
    161            
    162            GPIO_PinAFConfig(vectpxGpioPort[xLed] ,GPIO_PinSource11 ,GPIO_AF_TIM2);
   \   00000072   0x2201             MOVS     R2,#+1
   \   00000074   0x210B             MOVS     R1,#+11
   \   00000076   0x....             LDR.N    R0,??DataTable5_1
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000080   0x.... 0x....      BL       GPIO_PinAFConfig
    163            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_2_1 || SdkEvalGetVersion() == SDK_EVAL_VERSION_3 )
   \   00000084   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000088   0x2800             CMP      R0,#+0
   \   0000008A   0xD003             BEQ.N    ??SdkEvalLedInitPWM_0
   \   0000008C   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000090   0x2801             CMP      R0,#+1
   \   00000092   0xD10A             BNE.N    ??SdkEvalLedInitPWM_1
    164              vectpxGpioPort[xLed]->BSRRL = s_vectnGpioPin[xLed];
   \                     ??SdkEvalLedInitPWM_0: (+1)
   \   00000094   0x....             LDR.N    R0,??DataTable5_3
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000009A   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000009E   0x....             LDR.N    R1,??DataTable5_1
   \   000000A0   0x6809             LDR      R1,[R1, #+0]
   \   000000A2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A4   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   000000A8   0x8308             STRH     R0,[R1, #+24]
    165            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_D1)
   \                     ??SdkEvalLedInitPWM_1: (+1)
   \   000000AA   0x.... 0x....      BL       SdkEvalGetVersion
   \   000000AE   0x2802             CMP      R0,#+2
   \   000000B0   0xD10A             BNE.N    ??SdkEvalLedInitPWM_2
    166             vectpxGpioPort[xLed]->BSRRL = s_vectnGpioPin[xLed]; //*** Set pin High
   \   000000B2   0x....             LDR.N    R0,??DataTable5_3
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B8   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   000000BC   0x....             LDR.N    R1,??DataTable5_1
   \   000000BE   0x6809             LDR      R1,[R1, #+0]
   \   000000C0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C2   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   000000C6   0x8308             STRH     R0,[R1, #+24]
    167          }
   \                     ??SdkEvalLedInitPWM_2: (+1)
   \   000000C8   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    168          
    169          /**
    170           * @brief  Turns selected LED On.
    171           * @param  xLed Specifies the Led to be set on.
    172           *         This parameter can be one of following parameters:
    173           *         @arg LED1
    174           *         @arg LED2
    175           * @retval None.
    176           *
    177           * BSRR stands for bit set/reset register
    178           * It is seperated into a high and a low word (each of 16 bit size)
    179           * A logical 1 in BSRRL will set the pin and a logical 1 in BSRRH will
    180           * reset the pin. A logical 0 in either register has no effect
    181           *
    182           */

   \                                 In section .text, align 2, keep-with-next
    183          void SdkEvalLedOn(SdkEvalLed xLed)
    184          {
   \                     SdkEvalLedOn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    185            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_2_1 || SdkEvalGetVersion() == SDK_EVAL_VERSION_3)
   \   00000004   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD003             BEQ.N    ??SdkEvalLedOn_0
   \   0000000C   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD10A             BNE.N    ??SdkEvalLedOn_1
    186              vectpxGpioPort[xLed]->BSRRH = s_vectnGpioPin[xLed];
   \                     ??SdkEvalLedOn_0: (+1)
   \   00000014   0x....             LDR.N    R0,??DataTable5_3
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000001E   0x....             LDR.N    R1,??DataTable5_1
   \   00000020   0x6809             LDR      R1,[R1, #+0]
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   00000028   0x8348             STRH     R0,[R1, #+26]
    187            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_D1)
   \                     ??SdkEvalLedOn_1: (+1)
   \   0000002A   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD10A             BNE.N    ??SdkEvalLedOn_2
    188              vectpxGpioPort[xLed]->BSRRH = s_vectnGpioPin[xLed];      //*** Reset pin
   \   00000032   0x....             LDR.N    R0,??DataTable5_3
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000003C   0x....             LDR.N    R1,??DataTable5_1
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000042   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   00000046   0x8348             STRH     R0,[R1, #+26]
    189          }
   \                     ??SdkEvalLedOn_2: (+1)
   \   00000048   0xBD10             POP      {R4,PC}          ;; return
    190          
    191          /**
    192           * @brief  Turns selected LED Off.
    193           * @param  xLed Specifies the Led to be set off.
    194           *         This parameter can be one of following parameters:
    195           *         @arg LED1
    196           *         @arg LED2
    197           * @retval None.
    198           */

   \                                 In section .text, align 2, keep-with-next
    199          void SdkEvalLedOff(SdkEvalLed xLed)
    200          {
   \                     SdkEvalLedOff: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    201            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_2_1  || SdkEvalGetVersion() == SDK_EVAL_VERSION_3)
   \   00000004   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD003             BEQ.N    ??SdkEvalLedOff_0
   \   0000000C   0x.... 0x....      BL       SdkEvalGetVersion
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD10A             BNE.N    ??SdkEvalLedOff_1
    202                vectpxGpioPort[xLed]->BSRRL = s_vectnGpioPin[xLed];
   \                     ??SdkEvalLedOff_0: (+1)
   \   00000014   0x....             LDR.N    R0,??DataTable5_3
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000001E   0x....             LDR.N    R1,??DataTable5_1
   \   00000020   0x6809             LDR      R1,[R1, #+0]
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   00000028   0x8308             STRH     R0,[R1, #+24]
    203            if(SdkEvalGetVersion() == SDK_EVAL_VERSION_D1)
   \                     ??SdkEvalLedOff_1: (+1)
   \   0000002A   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000002E   0x2802             CMP      R0,#+2
   \   00000030   0xD10A             BNE.N    ??SdkEvalLedOff_2
    204                  vectpxGpioPort[xLed]->BSRRL = s_vectnGpioPin[xLed];  //*** Set pin High
   \   00000032   0x....             LDR.N    R0,??DataTable5_3
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   0000003C   0x....             LDR.N    R1,??DataTable5_1
   \   0000003E   0x6809             LDR      R1,[R1, #+0]
   \   00000040   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000042   0xF851 0x1024      LDR      R1,[R1, R4, LSL #+2]
   \   00000046   0x8308             STRH     R0,[R1, #+24]
    205          }
   \                     ??SdkEvalLedOff_2: (+1)
   \   00000048   0xBD10             POP      {R4,PC}          ;; return
    206          
    207          /**
    208           * @brief  Toggles the selected LED.
    209           * @param  xLed Specifies the Led to be toggled.
    210           *         This parameter can be one of following parameters:
    211           *         @arg LED1
    212           *         @arg LED2
    213           * @retval None.
    214           */

   \                                 In section .text, align 2, keep-with-next
    215          void SdkEvalLedToggle(SdkEvalLed xLed)
    216          {
    217            vectpxGpioPort[xLed]->ODR ^= s_vectnGpioPin[xLed];
   \                     SdkEvalLedToggle: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable5_1
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000000A   0x8A89             LDRH     R1,[R1, #+20]
   \   0000000C   0x....             LDR.N    R2,??DataTable5_3
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0xF832 0x2010      LDRH     R2,[R2, R0, LSL #+1]
   \   00000016   0x4051             EORS     R1,R2,R1
   \   00000018   0x....             LDR.N    R2,??DataTable5_1
   \   0000001A   0x6812             LDR      R2,[R2, #+0]
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000022   0x8291             STRH     R1,[R2, #+20]
    218          }
   \   00000024   0x4770             BX       LR               ;; return
    219          
    220          /**
    221           * @brief  Returns the status of a specified led.
    222           * @param  xLed Specifies the Led to be read.
    223           *         This parameter can be one of following parameters:
    224           *         @arg LED1
    225           *         @arg LED2
    226           * @retval FlagStatus return the status of the LED. This parameter can be:
    227           *         SET or RESET.
    228           */

   \                                 In section .text, align 2, keep-with-next
    229          FlagStatus SdkEvalLedGetState(SdkEvalLed xLed)
    230          {
   \                     SdkEvalLedGetState: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    231            if(vectpxGpioPort[xLed]->IDR & s_vectnGpioPin[xLed])
   \   00000002   0x....             LDR.N    R0,??DataTable5_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   0000000C   0x8A00             LDRH     R0,[R0, #+16]
   \   0000000E   0x....             LDR.N    R2,??DataTable5_3
   \   00000010   0x6812             LDR      R2,[R2, #+0]
   \   00000012   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   0xF832 0x2011      LDRH     R2,[R2, R1, LSL #+1]
   \   00000018   0x4210             TST      R0,R2
   \   0000001A   0xD001             BEQ.N    ??SdkEvalLedGetState_0
    232              return RESET;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE000             B.N      ??SdkEvalLedGetState_1
    233            else
    234              return SET;
   \                     ??SdkEvalLedGetState_0: (+1)
   \   00000020   0x2001             MOVS     R0,#+1
   \                     ??SdkEvalLedGetState_1: (+1)
   \   00000022   0x4770             BX       LR               ;; return
    235          }
    236          
    237          

   \                                 In section .text, align 2, keep-with-next
    238          void LED_Flash(SdkEvalLed xLed)
    239          {
   \                     LED_Flash: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    240            uint8_t times=3;
   \   00000004   0x2503             MOVS     R5,#+3
    241            
    242            while(times)
   \                     ??LED_Flash_0: (+1)
   \   00000006   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000008   0x2D00             CMP      R5,#+0
   \   0000000A   0xD011             BEQ.N    ??LED_Flash_1
    243            {
    244              SdkEvalLedOn(xLed);
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x.... 0x....      BL       SdkEvalLedOn
    245              SdkDelayMs(300);
   \   00000014   0xF44F 0x7096      MOV      R0,#+300
   \   00000018   0x.... 0x....      BL       SdkDelayMs
    246              SdkEvalLedOff(xLed);
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x.... 0x....      BL       SdkEvalLedOff
    247              SdkDelayMs(300);
   \   00000024   0xF44F 0x7096      MOV      R0,#+300
   \   00000028   0x.... 0x....      BL       SdkDelayMs
    248              times--;
   \   0000002C   0x1E6D             SUBS     R5,R5,#+1
   \   0000002E   0xE7EA             B.N      ??LED_Flash_0
    249            }
    250          }
   \                     ??LED_Flash_1: (+1)
   \   00000030   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     vectpxGpioPortVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     vectpxGpioPort

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     s_vectnGpioPinVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     s_vectnGpioPin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     s_vectlGpioClkVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     s_vectlGpioClk
    251          
    252          
    253          /**
    254           * @}
    255           */
    256          
    257          /**
    258           * @}
    259           */
    260          
    261          /**
    262           * @}
    263           */
    264          
    265          
    266          
    267          /******************* (C) COPYRIGHT 2012 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   LED_Flash
        16   -> SdkDelayMs
        16   -> SdkEvalLedOff
        16   -> SdkEvalLedOn
       0   SdkEvalLedGetState
      16   SdkEvalLedInit
        16   -> GPIO_Init
        16   -> RCC_AHBPeriphClockCmd
        16   -> SdkEvalGetVersion
      16   SdkEvalLedInitPWM
        16   -> GPIO_Init
        16   -> GPIO_PinAFConfig
        16   -> RCC_AHBPeriphClockCmd
        16   -> SdkEvalGetVersion
       8   SdkEvalLedOff
         8   -> SdkEvalGetVersion
       8   SdkEvalLedOn
         8   -> SdkEvalGetVersion
       0   SdkEvalLedToggle


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
      50  LED_Flash
      36  SdkEvalLedGetState
     184  SdkEvalLedInit
     202  SdkEvalLedInitPWM
      74  SdkEvalLedOff
      74  SdkEvalLedOn
      38  SdkEvalLedToggle
       4  s_vectlGpioClk
      24  s_vectlGpioClkVersion
       4  s_vectnGpioPin
      12  s_vectnGpioPinVersion
       4  vectpxGpioPort
      24  vectpxGpioPortVersion

 
  12 bytes in section .bss
  24 bytes in section .data
  36 bytes in section .rodata
 682 bytes in section .text
 
 682 bytes of CODE  memory
  36 bytes of CONST memory
  36 bytes of DATA  memory

Errors: none
Warnings: none
