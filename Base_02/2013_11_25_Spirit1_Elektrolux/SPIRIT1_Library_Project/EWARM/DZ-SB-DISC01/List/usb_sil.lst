###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Nov/2015  05:05:57
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\STM32_USB-FS-Device_Lib\Source\src\usb_sil.c
#    Command line =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\STM32_USB-FS-Device_Lib\Source\src\usb_sil.c
#        -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D STM32L1XX_MD -D
#        IAR_ARM_CM3 -D USE_FULL_ASSERT -D SPIRIT_USE_FULL_ASSERT -D
#        USE_SYSTICK_DELAY -D SDK -lC
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\
#        -o
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\.\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\examples\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\runtime\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SDK_Eval_Util\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device_Lib\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\usb_sil.lst
#    Object file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\usb_sil.o
#
###############################################################################

E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\STM32L\STM32_USB-FS-Device_Lib\Source\src\usb_sil.c
      1          /******************** (C) COPYRIGHT 2011 STMicroelectronics ********************
      2          * File Name          : usb_sil.c
      3          * Author             : MCD Application Team
      4          * Version            : V3.3.0
      5          * Date               : 21-March-2011
      6          * Description        : Simplified Interface Layer for Global Initialization and 
      7          *                      Endpoint Rea/Write operations.
      8          ********************************************************************************
      9          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     11          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     12          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     13          * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     14          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15          *******************************************************************************/
     16          
     17          /* Includes ------------------------------------------------------------------*/
     18          #include "usb_lib.h"
     19          
     20          /* Private typedef -----------------------------------------------------------*/
     21          /* Private define ------------------------------------------------------------*/
     22          /* Private macro -------------------------------------------------------------*/
     23          /* Private variables ---------------------------------------------------------*/
     24          /* Extern variables ----------------------------------------------------------*/
     25          /* Private function prototypes -----------------------------------------------*/
     26          /* Private functions ---------------------------------------------------------*/
     27          
     28          /*******************************************************************************
     29          * Function Name  : USB_SIL_Init
     30          * Description    : Initialize the USB Device IP and the Endpoint 0.
     31          * Input          : None.
     32          * Output         : None.
     33          * Return         : Status.
     34          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     35          uint32_t USB_SIL_Init(void)
     36          {
     37          #ifndef STM32F10X_CL
     38            
     39            /* USB interrupts initialization */
     40            /* clear pending interrupts */
     41            _SetISTR(0);
   \                     USB_SIL_Init: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable0  ;; 0x40005c44
   \   00000004   0x6008             STR      R0,[R1, #+0]
     42            wInterrupt_Mask = IMR_MSK;
   \   00000006   0xF44F 0x4006      MOV      R0,#+34304
   \   0000000A   0x....             LDR.N    R1,??DataTable0_1
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
     43            /* set interrupts mask */
     44            _SetCNTR(wInterrupt_Mask);
   \   0000000E   0x....             LDR.N    R0,??DataTable0_1
   \   00000010   0x8800             LDRH     R0,[R0, #+0]
   \   00000012   0x....             LDR.N    R1,??DataTable0_2  ;; 0x40005c40
   \   00000014   0x6008             STR      R0,[R1, #+0]
     45            
     46          #else
     47            
     48            /* Perform OTG Device initialization procedure (including EP0 init) */
     49            OTG_DEV_Init();
     50            
     51          #endif /* STM32F10X_CL */
     52          
     53            return 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x4770             BX       LR               ;; return
     54          }
     55          
     56          /*******************************************************************************
     57          * Function Name  : USB_SIL_Write
     58          * Description    : Write a buffer of data to a selected endpoint.
     59          * Input          : - bEpAddr: The address of the non control endpoint.
     60          *                  - pBufferPointer: The pointer to the buffer of data to be written
     61          *                    to the endpoint.
     62          *                  - wBufferSize: Number of data to be written (in bytes).
     63          * Output         : None.
     64          * Return         : Status.
     65          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     66          uint32_t USB_SIL_Write(uint8_t bEpAddr, uint8_t* pBufferPointer, uint32_t wBufferSize)
     67          {
   \                     USB_SIL_Write: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
     68          #ifndef STM32F10X_CL
     69          
     70            /* Use the memory interface function to write to the selected endpoint */
     71            UserToPMABufferCopy(pBufferPointer, GetEPTxAddr(bEpAddr & 0x7F), wBufferSize);
   \   00000008   0xF014 0x007F      ANDS     R0,R4,#0x7F
   \   0000000C   0x.... 0x....      BL       GetEPTxAddr
   \   00000010   0x0032             MOVS     R2,R6
   \   00000012   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000014   0x0001             MOVS     R1,R0
   \   00000016   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       UserToPMABufferCopy
     72          
     73            /* Update the data length in the control register */
     74            SetEPTxCount((bEpAddr & 0x7F), wBufferSize);
   \   0000001E   0x0031             MOVS     R1,R6
   \   00000020   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000022   0xF014 0x007F      ANDS     R0,R4,#0x7F
   \   00000026   0x.... 0x....      BL       SetEPTxCount
     75            
     76          #else
     77            
     78             /* Use the PCD interface layer function to write to the selected endpoint */
     79             PCD_EP_Write (bEpAddr, pBufferPointer, wBufferSize); 
     80             
     81          #endif /* STM32F10X_CL */
     82          
     83            return 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0xBD70             POP      {R4-R6,PC}       ;; return
     84          }
     85          
     86          /*******************************************************************************
     87          * Function Name  : USB_SIL_Read
     88          * Description    : Write a buffer of data to a selected endpoint.
     89          * Input          : - bEpAddr: The address of the non control endpoint.
     90          *                  - pBufferPointer: The pointer to which will be saved the 
     91          *                     received data buffer.
     92          * Output         : None.
     93          * Return         : Number of received data (in Bytes).
     94          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     95          uint32_t USB_SIL_Read(uint8_t bEpAddr, uint8_t* pBufferPointer)
     96          {
   \                     USB_SIL_Read: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     97            uint32_t DataLength = 0;
   \   00000006   0x2600             MOVS     R6,#+0
     98          
     99          #ifndef STM32F10X_CL
    100          
    101            /* Get the number of received data on the selected Endpoint */
    102            DataLength = GetEPRxCount(bEpAddr & 0x7F);
   \   00000008   0xF014 0x007F      ANDS     R0,R4,#0x7F
   \   0000000C   0x.... 0x....      BL       GetEPRxCount
   \   00000010   0x0006             MOVS     R6,R0
    103            
    104            /* Use the memory interface function to write to the selected endpoint */
    105            PMAToUserBufferCopy(pBufferPointer, GetEPRxAddr(bEpAddr & 0x7F), DataLength);
   \   00000012   0xF014 0x007F      ANDS     R0,R4,#0x7F
   \   00000016   0x.... 0x....      BL       GetEPRxAddr
   \   0000001A   0x0032             MOVS     R2,R6
   \   0000001C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000001E   0x0001             MOVS     R1,R0
   \   00000020   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000022   0x0028             MOVS     R0,R5
   \   00000024   0x.... 0x....      BL       PMAToUserBufferCopy
    106          
    107          #else
    108            
    109            USB_OTG_EP *ep;
    110          
    111            /* Get the structure pointer of the selected Endpoint */
    112            ep = PCD_GetOutEP(bEpAddr);
    113            
    114            /* Get the number of received data */
    115            DataLength = ep->xfer_len;
    116            
    117            /* Use the PCD interface layer function to read the selected endpoint */
    118            PCD_EP_Read (bEpAddr, pBufferPointer, DataLength);
    119            
    120          #endif /* STM32F10X_CL */
    121          
    122            /* Return the number of received data */
    123            return DataLength;
   \   00000028   0x0030             MOVS     R0,R6
   \   0000002A   0xBD70             POP      {R4-R6,PC}       ;; return
    124          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x40005C44         DC32     0x40005c44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     wInterrupt_Mask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x40005C40         DC32     0x40005c40
    125          
    126          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   USB_SIL_Init
      16   USB_SIL_Read
        16   -> GetEPRxAddr
        16   -> GetEPRxCount
        16   -> PMAToUserBufferCopy
      16   USB_SIL_Write
        16   -> GetEPTxAddr
        16   -> SetEPTxCount
        16   -> UserToPMABufferCopy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
      26  USB_SIL_Init
      44  USB_SIL_Read
      46  USB_SIL_Write

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
