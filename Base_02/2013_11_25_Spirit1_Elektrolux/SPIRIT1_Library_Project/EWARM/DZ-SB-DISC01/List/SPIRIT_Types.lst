###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Nov/2015  05:05:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\SPIRIT1_Library\Source\src\SPIRIT_Types.c
#    Command line =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\SPIRIT1_Library\Source\src\SPIRIT_Types.c
#        -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D STM32L1XX_MD -D
#        IAR_ARM_CM3 -D USE_FULL_ASSERT -D SPIRIT_USE_FULL_ASSERT -D
#        USE_SYSTICK_DELAY -D SDK -lC
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\
#        -o
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\.\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\examples\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\runtime\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SDK_Eval_Util\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device_Lib\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\SPIRIT_Types.lst
#    Object file  =  
#        E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\SPIRIT_Types.o
#
###############################################################################

E:\ACQ\Proj_ver09a_15102015\Base_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\SPIRIT1_Library\Source\src\SPIRIT_Types.c
      1          /**
      2           * @file     SPIRIT_Types.c
      3           * @author  High End Analog & RF BU - AMS / ART Team IMS-Systems Lab
      4           * @version V3.0.1
      5           * @date    November 19, 2012
      6           * @brief    This file provides functions to manage SPIRIT debug.
      7           * @details
      8           *
      9           * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10           * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     11           * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     12           * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     13           * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     14           * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15           *
     16           * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     17           * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     18           * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     19           *
     20           * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     21           *
     22           */
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "SPIRIT_Types.h"
     26          #include "MCU_Interface.h"
     27          
     28          
     29          /** @addtogroup SPIRIT_Libraries
     30           * @{
     31           */
     32          
     33          
     34          /** @addtogroup SPIRIT_Types
     35           * @{
     36           */
     37          
     38          
     39          /** @defgroup Types_Private_TypesDefinitions    Types Private Types Definitions
     40           * @{
     41           */
     42          
     43          
     44          /**
     45           * @}
     46           */
     47          
     48          
     49          
     50          /** @defgroup Types_Private_Defines             Types Private Defines
     51           * @{
     52           */
     53          
     54          
     55          /**
     56           * @}
     57           */
     58          
     59          
     60          
     61          /** @defgroup Types_Private_Macros               Types Private Macros
     62           * @{
     63           */
     64          
     65          
     66          /**
     67           * @}
     68           */
     69          
     70          
     71          
     72          /** @defgroup Types_Private_Variables             Types Private Variables
     73           * @{
     74           */
     75          
     76          /**
     77           * @brief  Spirit Status global variable.
     78           *         This global variable of @ref SpiritStatus type is updated on every SPI transaction
     79           *         to maintain memory of Spirit Status.
     80           */
     81          

   \                                 In section .bss, align 4
     82          volatile SpiritStatus g_xStatus;
   \                     g_xStatus:
   \   00000000                      DS8 4
     83          
     84          /**
     85           * @}
     86           */
     87          
     88          
     89          
     90          /** @defgroup Types_Private_FunctionPrototypes       Types Private FunctionPrototypes
     91           * @{
     92           */
     93          
     94          
     95          
     96          /**
     97           * @}
     98           */
     99          
    100          
    101          
    102          /** @defgroup Types_Private_Functions                 Types Private Functions
    103           * @{
    104           */
    105          
    106          #ifdef  SPIRIT_USE_FULL_ASSERT
    107          /**
    108           * @brief  Reports the name of the source file and the source line number
    109           *         where the assert_param error has oc-curred.
    110           * @param file  pointer to the source file name
    111           * @param line  assert_param error line source number
    112           * @retval : None
    113           */

   \                                 In section .text, align 2, keep-with-next
    114          void s_assert_failed(uint8_t* file, uint32_t line)
    115          {
   \                     s_assert_failed: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    116            /* User can add his own implementation to report the file name and line number */
    117            printf("Wrong parameters value: file %s on line %d\r\n", file, line);
   \   00000006   0x002A             MOVS     R2,R5
   \   00000008   0x0021             MOVS     R1,R4
   \   0000000A   0x....             LDR.N    R0,??DataTable1
   \   0000000C   0x.... 0x....      BL       printf
    118          
    119            /* Infinite loop */
    120            while (1)
    121            {
    122               printf("Wrong parameters value: file %s on line %d\r\n", file, line);
   \                     ??s_assert_failed_0: (+1)
   \   00000010   0x002A             MOVS     R2,R5
   \   00000012   0x0021             MOVS     R1,R4
   \   00000014   0x....             LDR.N    R0,??DataTable1
   \   00000016   0x.... 0x....      BL       printf
   \   0000001A   0xE7F9             B.N      ??s_assert_failed_0
    123          
    124            }
    125          }
    126          #elif SPIRIT_USE_VCOM_ASSERT
    127          
    128          #include "SDK_EVAL_VC_General.h"
    129          
    130          /**
    131           * @brief  Reports the name of the source file and the source line number
    132           *         where the assert_param error has occurred.
    133           * @param file pointer to the source file name
    134           * @param line  assert_param error line source number
    135           * @param expression: string representing the assert failed expression
    136           * @retval : None
    137           */
    138          void s_assert_failed(uint8_t* file, uint32_t line, char* expression)
    139          {
    140          
    141            printf("\n\rVCOM DEBUG: Incorrect parameter. Please reboot.\n\r");
    142            printf("%s:%d \n\r",file,line);
    143            printf("The expression %s returned FALSE.\n\r", expression);
    144          
    145            /* Infinite loop */
    146            while (1)
    147            {
    148            }
    149          }
    150          
    151          #elif SPIRIT_USE_FRAME_ASSERT
    152          
    153          #include "SdkUsbProtocol.h"
    154          
    155          /**
    156           * @brief Sends a notify frame with a payload indicating the name 
    157           *        of the assert failed.
    158           * @param expression: string representing the assert failed expression
    159           * @retval : None
    160           */
    161          void s_assert_failed(char* expression)
    162          {
    163            char pcPayload[100];
    164            uint16_t i;
    165            
    166            for(i = 0 ; expression[i]!='(' ; i++);
    167            expression[i]='\0';
    168            
    169            strcpy(pcPayload, &expression[3]);
    170            
    171            //sprintf(pcPayload, "The expression %s returned FALSE.\n\r", expression);
    172            SpiritNotifyAssertFailed(pcPayload);
    173          
    174          }
    175          
    176          #endif
    177          
    178          
    179          /**
    180           * @brief  Updates the gState (the global variable used to maintain memory of Spirit Status)
    181           *         reading the MC_STATE register of SPIRIT.
    182           * @param  None
    183           * @retval None
    184           */

   \                                 In section .text, align 2, keep-with-next
    185          void SpiritRefreshStatus(void)
    186          {
   \                     SpiritRefreshStatus: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    187            uint8_t tempRegValue;
    188          
    189            /* Reads the MC_STATUS register to update the g_xStatus */
    190            g_xStatus = SpiritSpiReadRegisters(MC_STATE1_BASE, 1, &tempRegValue);
   \   00000002   0xAA00             ADD      R2,SP,#+0
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x20C0             MOVS     R0,#+192
   \   00000008   0x.... 0x....      BL       SdkEvalSpiReadRegisters
   \   0000000C   0x....             LDR.N    R1,??DataTable1_1
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    191          
    192          }
   \   00000010   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     g_xStatus

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x57 0x72          DC8 "Wrong parameters value: file %s on line %d\015\012"
   \              0x6F 0x6E    
   \              0x67 0x20    
   \              0x70 0x61    
   \              0x72 0x61    
   \              0x6D 0x65    
   \              0x74 0x65    
   \              0x72 0x73    
   \              0x20 0x76    
   \              0x61 0x6C    
   \              0x75 0x65    
   \              0x3A 0x20    
   \              0x66 0x69    
   \              0x6C 0x65    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x6F 0x6E    
   \              0x20 0x6C    
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    193          
    194          
    195          /**
    196           * @}
    197           */
    198          
    199          
    200          
    201          /**
    202           * @}
    203           */
    204          
    205          
    206          
    207          /**
    208           * @}
    209           */
    210          
    211          
    212          
    213          /******************* (C) COPYRIGHT 2012 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SpiritRefreshStatus
         8   -> SdkEvalSpiReadRegisters
      16   s_assert_failed
        16   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      48  ?_0
      18  SpiritRefreshStatus
       4  g_xStatus
      28  s_assert_failed

 
  4 bytes in section .bss
 48 bytes in section .rodata
 54 bytes in section .text
 
 54 bytes of CODE  memory
 48 bytes of CONST memory
  4 bytes of DATA  memory

Errors: none
Warnings: none
