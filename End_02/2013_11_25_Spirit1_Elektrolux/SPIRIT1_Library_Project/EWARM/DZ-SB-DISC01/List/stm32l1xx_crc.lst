###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Nov/2015  05:04:49
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_crc.c
#    Command line =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_crc.c
#        -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D STM32L1XX_MD -D
#        IAR_ARM_CM3 -D USE_FULL_ASSERT -D SPIRIT_USE_FULL_ASSERT -D
#        USE_SYSTICK_DELAY -D SDK -lC
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\
#        -o
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\.\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\examples\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\runtime\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SDK_Eval_Util\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device_Lib\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\stm32l1xx_crc.lst
#    Object file  =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\stm32l1xx_crc.o
#
###############################################################################

E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\src\stm32l1xx_crc.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32l1xx_crc.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    31-December-2010
      7            * @brief   This file provides all the CRC firmware functions.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
     19            ******************************************************************************  
     20            */ 
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm32l1xx_crc.h"
     24          
     25          /** @addtogroup STM32L1xx_StdPeriph_Driver
     26            * @{
     27            */
     28          
     29          /** @defgroup CRC 
     30            * @brief CRC driver modules
     31            * @{
     32            */
     33          
     34          /* Private typedef -----------------------------------------------------------*/
     35          /* Private define ------------------------------------------------------------*/
     36          /* Private macro -------------------------------------------------------------*/
     37          /* Private variables ---------------------------------------------------------*/
     38          /* Private function prototypes -----------------------------------------------*/
     39          /* Private functions ---------------------------------------------------------*/
     40          
     41          /** @defgroup CRC_Private_Functions
     42            * @{
     43            */
     44          
     45          /**
     46            * @brief  Resets the CRC Data register (DR).
     47            * @param  None
     48            * @retval None
     49            */

   \                                 In section .text, align 2, keep-with-next
     50          void CRC_ResetDR(void)
     51          {
     52            /* Reset CRC generator */
     53            CRC->CR = CRC_CR_RESET;
   \                     CRC_ResetDR: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x....             LDR.N    R1,??DataTable5  ;; 0x40023008
   \   00000004   0x6008             STR      R0,[R1, #+0]
     54          }
   \   00000006   0x4770             BX       LR               ;; return
     55          
     56          /**
     57            * @brief  Computes the 32-bit CRC of a given data word(32-bit).
     58            * @param  Data: data word(32-bit) to compute its CRC
     59            * @retval 32-bit CRC
     60            */

   \                                 In section .text, align 2, keep-with-next
     61          uint32_t CRC_CalcCRC(uint32_t Data)
     62          {
   \                     CRC_CalcCRC: (+1)
   \   00000000   0x0001             MOVS     R1,R0
     63            CRC->DR = Data;
   \   00000002   0x....             LDR.N    R0,??DataTable5_1  ;; 0x40023000
   \   00000004   0x6001             STR      R1,[R0, #+0]
     64            
     65            return (CRC->DR);
   \   00000006   0x....             LDR.N    R0,??DataTable5_1  ;; 0x40023000
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x4770             BX       LR               ;; return
     66          }
     67          
     68          /**
     69            * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
     70            * @param  pBuffer: pointer to the buffer containing the data to be computed
     71            * @param  BufferLength: length of the buffer to be computed					
     72            * @retval 32-bit CRC
     73            */

   \                                 In section .text, align 2, keep-with-next
     74          uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
     75          {
   \                     CRC_CalcBlockCRC: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x0002             MOVS     R2,R0
     76            uint32_t index = 0;
   \   00000004   0x2300             MOVS     R3,#+0
     77            
     78            for(index = 0; index < BufferLength; index++)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x0003             MOVS     R3,R0
   \                     ??CRC_CalcBlockCRC_0: (+1)
   \   0000000A   0x428B             CMP      R3,R1
   \   0000000C   0xD205             BCS.N    ??CRC_CalcBlockCRC_1
     79            {
     80              CRC->DR = pBuffer[index];
   \   0000000E   0xF852 0x0023      LDR      R0,[R2, R3, LSL #+2]
   \   00000012   0x....             LDR.N    R4,??DataTable5_1  ;; 0x40023000
   \   00000014   0x6020             STR      R0,[R4, #+0]
     81            }
   \   00000016   0x1C5B             ADDS     R3,R3,#+1
   \   00000018   0xE7F7             B.N      ??CRC_CalcBlockCRC_0
     82            return (CRC->DR);
   \                     ??CRC_CalcBlockCRC_1: (+1)
   \   0000001A   0x....             LDR.N    R0,??DataTable5_1  ;; 0x40023000
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xBC10             POP      {R4}
   \   00000020   0x4770             BX       LR               ;; return
     83          }
     84          
     85          /**
     86            * @brief  Returns the current CRC value.
     87            * @param  None
     88            * @retval 32-bit CRC
     89            */

   \                                 In section .text, align 2, keep-with-next
     90          uint32_t CRC_GetCRC(void)
     91          {
     92            return (CRC->DR);
   \                     CRC_GetCRC: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5_1  ;; 0x40023000
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
     93          }
     94          
     95          /**
     96            * @brief  Stores a 8-bit data in the Independent Data(ID) register.
     97            * @param  IDValue: 8-bit value to be stored in the ID register 					
     98            * @retval None
     99            */

   \                                 In section .text, align 2, keep-with-next
    100          void CRC_SetIDRegister(uint8_t IDValue)
    101          {
    102            CRC->IDR = IDValue;
   \                     CRC_SetIDRegister: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable5_2  ;; 0x40023004
   \   00000002   0x7008             STRB     R0,[R1, #+0]
    103          }
   \   00000004   0x4770             BX       LR               ;; return
    104          
    105          /**
    106            * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
    107            * @param  None
    108            * @retval 8-bit value of the ID register 
    109            */

   \                                 In section .text, align 2, keep-with-next
    110          uint8_t CRC_GetIDRegister(void)
    111          {
    112            return (CRC->IDR);
   \                     CRC_GetIDRegister: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable5_2  ;; 0x40023004
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x4770             BX       LR               ;; return
    113          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x40023008         DC32     0x40023008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x40023000         DC32     0x40023000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x40023004         DC32     0x40023004
    114          
    115          /**
    116            * @}
    117            */
    118          
    119          /**
    120            * @}
    121            */
    122          
    123          /**
    124            * @}
    125            */
    126          
    127          /******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   CRC_CalcBlockCRC
       0   CRC_CalcCRC
       0   CRC_GetCRC
       0   CRC_GetIDRegister
       0   CRC_ResetDR
       0   CRC_SetIDRegister


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
      34  CRC_CalcBlockCRC
      12  CRC_CalcCRC
       6  CRC_GetCRC
       8  CRC_GetIDRegister
       8  CRC_ResetDR
       6  CRC_SetIDRegister

 
 86 bytes in section .text
 
 86 bytes of CODE memory

Errors: none
Warnings: none
