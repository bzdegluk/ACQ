###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        28/Feb/2015  23:14:07
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Button.c
#    Command line =  
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Button.c
#        -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D STM32L1XX_MD -D
#        IAR_ARM_CM3 -D USE_FULL_ASSERT -D SPIRIT_USE_FULL_ASSERT -D
#        USE_SYSTICK_DELAY -D SDK -lC
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\
#        -o
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        F:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\.\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\examples\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\runtime\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\inc\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SDK_Eval_Util\Source\inc\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\inc\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\inc\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device_Lib\Source\inc\
#        -I
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\
#        -On --use_c++_inline -I F:\IAR\arm\CMSIS\Include\
#    List file    =  
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\SDK_EVAL_Button.lst
#    Object file  =  
#        F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\SDK_EVAL_Button.o
#
###############################################################################

F:\ACQ\Proj_ver06_28022015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Button.c
      1          /**
      2           * @file    SDK_EVAL_Button.c
      3           * @author  High End Analog & RF BU - AMS / ART Team IMS-Systems Lab
      4           * @version V3.0.0
      5           * @date    August 7, 2012
      6           * @brief   This file provides all the low level API to manage SDK buttons.
      7           * @details
      8           *
      9           * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10           * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     11           * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     12           * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     13           * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     14           * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15           *
     16           * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     17           * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     18           * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     19           *
     20           * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     21           */
     22          
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "SDK_EVAL_Button.h"
     26          #include "SDK_EVAL_Config.h"
     27          
     28          
     29          /** @addtogroup SDK_EVAL_STM32L
     30           * @{
     31           */
     32          
     33          
     34          /** @addtogroup SDK_EVAL_Button
     35           * @{
     36           */
     37          
     38          /** @defgroup SDK_EVAL_Button_Private_TypesDefinitions          SDK EVAL Button Private Types Definitions
     39           * @{
     40           */
     41          
     42          /**
     43           * @}
     44           */
     45          
     46          
     47          /** @defgroup SDK_EVAL_Button_Private_Defines                   SDK EVAL Button Private Defines
     48           * @{
     49           */
     50          
     51          /**
     52           * @}
     53           */
     54          
     55          
     56          /** @defgroup SDK_EVAL_Button_Private_Macros                    SDK EVAL Button Private Macros
     57           * @{
     58           */
     59          
     60          /**
     61           * @}
     62           */
     63          
     64          
     65          
     66          /** @defgroup SDK_EVAL_Button_Private_Variables                         SDK EVAL Button Private Variables
     67           * @{
     68           */
     69          

   \                                 In section .data, align 4
     70          GPIO_TypeDef* s_vectpxButtonPortVersion[3][BUTTONn] = {
   \                     s_vectpxButtonPortVersion:
   \   00000000   0x40021000         DC32 40021000H, 40020400H, 40021000H, 40021000H, 40020400H, 40021000H
   \              0x40020400   
   \              0x40021000   
   \              0x40021000   
   \              0x40020400   
   \              0x40021000   
   \   00000018   0x40020800         DC32 40020800H, 40021000H, 40020400H, 40020000H, 40020000H, 40020400H
   \              0x40021000   
   \              0x40020400   
   \              0x40020000   
   \              0x40020000   
   \              0x40020400   
   \   00000030   0x40020000         DC32 40020000H, 40020800H, 40020000H, 40020000H, 40020000H, 40020000H
   \              0x40020800   
   \              0x40020000   
   \              0x40020000   
   \              0x40020000   
   \              0x40020000   
   \   00000048   0x40020000         DC32 40020000H, 40020000H, 40020400H
   \              0x40020000   
   \              0x40020400   
     71              {KEY_BUTTON_GPIO_PORT, RIGHT_BUTTON_GPIO_PORT, LEFT_BUTTON_V2_GPIO_PORT, UP_BUTTON_V2_GPIO_PORT, DOWN_BUTTON_GPIO_PORT, SEL_BUTTON_V2_GPIO_PORT, SCM_PS_BUTTON_GPIO_PORT},
     72              {KEY_BUTTON_GPIO_PORT, RIGHT_BUTTON_GPIO_PORT, LEFT_BUTTON_V3_GPIO_PORT, UP_BUTTON_V3_GPIO_PORT, DOWN_BUTTON_GPIO_PORT, SEL_BUTTON_V3_GPIO_PORT, SCM_PS_BUTTON_GPIO_PORT},
     73              {KEY_BUTTON_VD1_GPIO_PORT, KEY_BUTTON_VD1_GPIO_PORT, KEY_BUTTON_VD1_GPIO_PORT, KEY_BUTTON_VD1_GPIO_PORT, KEY_BUTTON_VD1_GPIO_PORT, KEY_BUTTON_VD1_GPIO_PORT, SCM_PS_BUTTON_VD1_GPIO_PORT}
     74          };
     75          

   \                                 In section .rodata, align 4
     76          static const uint16_t s_vectnButtonPinVersion[3][BUTTONn] = {
   \                     s_vectnButtonPinVersion:
   \   00000000   0x0200 0x0002      DC16 512, 2, 64, 256, 1, 128, 64, 512, 2, 256, 1024, 1, 512, 64, 2, 2
   \              0x0040 0x0100
   \              0x0001 0x0080
   \              0x0040 0x0200
   \              0x0002 0x0100
   \              0x0400 0x0001
   \              0x0200 0x0040
   \              0x0002 0x0002
   \   00000020   0x0002 0x0002      DC16 2, 2, 2, 2, 4
   \              0x0002 0x0002
   \              0x0004       
   \   0000002A   0x00 0x00          DC8 0, 0
     77              {KEY_BUTTON_PIN, RIGHT_BUTTON_PIN, LEFT_BUTTON_V2_PIN, UP_BUTTON_V2_PIN, DOWN_BUTTON_PIN, SEL_BUTTON_V2_PIN, SCM_PS_BUTTON_PIN},
     78              {KEY_BUTTON_PIN, RIGHT_BUTTON_PIN, LEFT_BUTTON_V3_PIN, UP_BUTTON_V3_PIN, DOWN_BUTTON_PIN, SEL_BUTTON_V3_PIN, SCM_PS_BUTTON_PIN},
     79              {KEY_BUTTON_VD1_PIN, KEY_BUTTON_VD1_PIN, KEY_BUTTON_VD1_PIN, KEY_BUTTON_VD1_PIN, KEY_BUTTON_VD1_PIN, KEY_BUTTON_VD1_PIN, SCM_PS_BUTTON_VD1_PIN}
     80          };
     81          

   \                                 In section .rodata, align 4
     82          static const uint32_t s_vectlButtonClkVersion[3][BUTTONn] = {
   \                     s_vectlButtonClkVersion:
   \   00000000   0x00000010         DC32 16, 2, 16, 16, 2, 16, 4, 16, 2, 1, 1, 2, 1, 4, 1, 1, 1, 1, 1, 1, 2
   \              0x00000002   
   \              0x00000010   
   \              0x00000010   
   \              0x00000002   
   \              0x00000010   
   \              0x00000004   
   \              0x00000010   
   \              0x00000002   
   \              0x00000001   
   \              0x00000001   
   \              0x00000002   
   \              0x00000001   
   \              0x00000004   
   \              0x00000001   
   \              0x00000001   
   \              0x00000001   
   \              0x00000001   
   \              0x00000001   
   \              0x00000001   
   \              0x00000002   
     83              {KEY_BUTTON_GPIO_CLK, RIGHT_BUTTON_GPIO_CLK, LEFT_BUTTON_V2_GPIO_CLK, UP_BUTTON_V2_GPIO_CLK, DOWN_BUTTON_GPIO_CLK, SEL_BUTTON_V2_GPIO_CLK, SCM_PS_BUTTON_GPIO_CLK},
     84              {KEY_BUTTON_GPIO_CLK, RIGHT_BUTTON_GPIO_CLK, LEFT_BUTTON_V3_GPIO_CLK, UP_BUTTON_V3_GPIO_CLK, DOWN_BUTTON_GPIO_CLK, SEL_BUTTON_V3_GPIO_CLK, SCM_PS_BUTTON_GPIO_CLK},
     85              {KEY_BUTTON_VD1_GPIO_CLK, KEY_BUTTON_VD1_GPIO_CLK, KEY_BUTTON_VD1_GPIO_CLK, KEY_BUTTON_VD1_GPIO_CLK, KEY_BUTTON_VD1_GPIO_CLK, KEY_BUTTON_VD1_GPIO_CLK, SCM_PS_BUTTON_VD1_GPIO_CLK}
     86          };
     87          

   \                                 In section .rodata, align 4
     88          static const uint16_t s_vectnButtonExtiLineVersion[3][BUTTONn] = {
   \                     s_vectnButtonExtiLineVersion:
   \   00000000   0x0200 0x0002      DC16 512, 2, 64, 256, 1, 128, 64, 512, 2, 256, 1024, 1, 512, 64, 2, 2
   \              0x0040 0x0100
   \              0x0001 0x0080
   \              0x0040 0x0200
   \              0x0002 0x0100
   \              0x0400 0x0001
   \              0x0200 0x0040
   \              0x0002 0x0002
   \   00000020   0x0002 0x0002      DC16 2, 2, 2, 2, 4
   \              0x0002 0x0002
   \              0x0004       
   \   0000002A   0x00 0x00          DC8 0, 0
     89              {KEY_BUTTON_EXTI_LINE, RIGHT_BUTTON_EXTI_LINE, LEFT_BUTTON_V2_EXTI_LINE, UP_BUTTON_V2_EXTI_LINE, DOWN_BUTTON_EXTI_LINE, SEL_BUTTON_V2_EXTI_LINE, SCM_PS_BUTTON_EXTI_LINE},
     90              {KEY_BUTTON_EXTI_LINE, RIGHT_BUTTON_EXTI_LINE, LEFT_BUTTON_V3_EXTI_LINE, UP_BUTTON_V3_EXTI_LINE, DOWN_BUTTON_EXTI_LINE, SEL_BUTTON_V3_EXTI_LINE, SCM_PS_BUTTON_EXTI_LINE},
     91              {KEY_BUTTON_VD1_EXTI_LINE, KEY_BUTTON_VD1_EXTI_LINE, KEY_BUTTON_VD1_EXTI_LINE, KEY_BUTTON_VD1_EXTI_LINE, KEY_BUTTON_VD1_EXTI_LINE, KEY_BUTTON_VD1_EXTI_LINE, SCM_PS_BUTTON_VD1_EXTI_LINE}
     92          };
     93          

   \                                 In section .rodata, align 4
     94          static const uint16_t s_vectnButtonPortSourceVersion[3][BUTTONn] = {
   \                     s_vectnButtonPortSourceVersion:
   \   00000000   0x0004 0x0001      DC16 4, 1, 4, 4, 1, 4, 2, 4, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1
   \              0x0004 0x0004
   \              0x0001 0x0004
   \              0x0002 0x0004
   \              0x0001 0x0000
   \              0x0000 0x0001
   \              0x0000 0x0002
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0000 0x0000
   \              0x0001       
   \   0000002A   0x00 0x00          DC8 0, 0
     95              {KEY_BUTTON_EXTI_PORT_SOURCE, RIGHT_BUTTON_EXTI_PORT_SOURCE, LEFT_BUTTON_V2_EXTI_PORT_SOURCE, UP_BUTTON_V2_EXTI_PORT_SOURCE, DOWN_BUTTON_EXTI_PORT_SOURCE, SEL_BUTTON_V2_EXTI_PORT_SOURCE, SCM_PS_BUTTON_EXTI_PORT_SOURCE},
     96              {KEY_BUTTON_EXTI_PORT_SOURCE, RIGHT_BUTTON_EXTI_PORT_SOURCE, LEFT_BUTTON_V3_EXTI_PORT_SOURCE, UP_BUTTON_V3_EXTI_PORT_SOURCE, DOWN_BUTTON_EXTI_PORT_SOURCE, SEL_BUTTON_V3_EXTI_PORT_SOURCE, SCM_PS_BUTTON_EXTI_PORT_SOURCE},
     97              {KEY_BUTTON_VD1_EXTI_PORT_SOURCE, KEY_BUTTON_VD1_EXTI_PORT_SOURCE, KEY_BUTTON_VD1_EXTI_PORT_SOURCE, KEY_BUTTON_VD1_EXTI_PORT_SOURCE, KEY_BUTTON_VD1_EXTI_PORT_SOURCE, KEY_BUTTON_VD1_EXTI_PORT_SOURCE, SCM_PS_BUTTON_VD1_EXTI_PORT_SOURCE}
     98          };
     99          

   \                                 In section .rodata, align 4
    100          static const uint16_t s_vectnButtonPinSourceVersion[3][BUTTONn] = {
   \                     s_vectnButtonPinSourceVersion:
   \   00000000   0x0009 0x0001      DC16 9, 1, 6, 8, 0, 7, 6, 9, 1, 8, 10, 0, 9, 6, 1, 1, 1, 1, 1, 1, 2
   \              0x0006 0x0008
   \              0x0000 0x0007
   \              0x0006 0x0009
   \              0x0001 0x0008
   \              0x000A 0x0000
   \              0x0009 0x0006
   \              0x0001 0x0001
   \              0x0001 0x0001
   \              0x0001 0x0001
   \              0x0002       
   \   0000002A   0x00 0x00          DC8 0, 0
    101              {KEY_BUTTON_EXTI_PIN_SOURCE, RIGHT_BUTTON_EXTI_PIN_SOURCE, LEFT_BUTTON_V2_EXTI_PIN_SOURCE, UP_BUTTON_V2_EXTI_PIN_SOURCE, DOWN_BUTTON_EXTI_PIN_SOURCE, SEL_BUTTON_V2_EXTI_PIN_SOURCE, SCM_PS_BUTTON_EXTI_PIN_SOURCE},
    102              {KEY_BUTTON_EXTI_PIN_SOURCE, RIGHT_BUTTON_EXTI_PIN_SOURCE, LEFT_BUTTON_V3_EXTI_PIN_SOURCE, UP_BUTTON_V3_EXTI_PIN_SOURCE, DOWN_BUTTON_EXTI_PIN_SOURCE, SEL_BUTTON_V3_EXTI_PIN_SOURCE, SCM_PS_BUTTON_EXTI_PIN_SOURCE},
    103              {KEY_BUTTON_VD1_EXTI_PIN_SOURCE, KEY_BUTTON_VD1_EXTI_PIN_SOURCE, KEY_BUTTON_VD1_EXTI_PIN_SOURCE, KEY_BUTTON_VD1_EXTI_PIN_SOURCE, KEY_BUTTON_VD1_EXTI_PIN_SOURCE, KEY_BUTTON_VD1_EXTI_PIN_SOURCE, SCM_PS_BUTTON_VD1_EXTI_PIN_SOURCE}
    104          };
    105          

   \                                 In section .rodata, align 4
    106          static const uint16_t s_vectnButtonIrqnVersion[3][BUTTONn] = {
   \                     s_vectnButtonIrqnVersion:
   \   00000000   0x0017 0x0007      DC16 23, 7, 23, 23, 6, 23, 23, 23, 7, 23, 40, 6, 23, 23, 7, 7, 7, 7, 7
   \              0x0017 0x0017
   \              0x0006 0x0017
   \              0x0017 0x0017
   \              0x0007 0x0017
   \              0x0028 0x0006
   \              0x0017 0x0017
   \              0x0007 0x0007
   \              0x0007 0x0007
   \              0x0007       
   \   00000026   0x0007 0x0008      DC16 7, 8
   \   0000002A   0x00 0x00          DC8 0, 0
    107              {KEY_BUTTON_EXTI_IRQn, RIGHT_BUTTON_EXTI_IRQn, LEFT_BUTTON_V2_EXTI_IRQn, UP_BUTTON_V2_EXTI_IRQn, DOWN_BUTTON_EXTI_IRQn, SEL_BUTTON_V2_EXTI_IRQn, SCM_PS_BUTTON_EXTI_IRQn},
    108              {KEY_BUTTON_EXTI_IRQn, RIGHT_BUTTON_EXTI_IRQn, LEFT_BUTTON_V3_EXTI_IRQn, UP_BUTTON_V3_EXTI_IRQn, DOWN_BUTTON_EXTI_IRQn, SEL_BUTTON_V3_EXTI_IRQn, SCM_PS_BUTTON_EXTI_IRQn},
    109              {KEY_BUTTON_VD1_EXTI_IRQn, KEY_BUTTON_VD1_EXTI_IRQn, KEY_BUTTON_VD1_EXTI_IRQn, KEY_BUTTON_VD1_EXTI_IRQn, KEY_BUTTON_VD1_EXTI_IRQn, KEY_BUTTON_VD1_EXTI_IRQn, SCM_PS_BUTTON_VD1_EXTI_IRQn}
    110          };
    111          
    112          

   \                                 In section .bss, align 4
    113          static GPIO_TypeDef** s_vectpxButtonPort;
   \                     s_vectpxButtonPort:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    114          static uint16_t* s_vectnButtonPin;
   \                     s_vectnButtonPin:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    115          static uint32_t* s_vectlButtonClk;
   \                     s_vectlButtonClk:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    116          static uint16_t* s_vectnButtonExtiLine;
   \                     s_vectnButtonExtiLine:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    117          static uint16_t* s_vectnButtonPortSource;
   \                     s_vectnButtonPortSource:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    118          static uint16_t* s_vectnButtonPinSource;
   \                     s_vectnButtonPinSource:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    119          static uint16_t* s_vectnButtonIrqn;
   \                     s_vectnButtonIrqn:
   \   00000000                      DS8 4
    120          
    121          /**
    122           * @}
    123           */
    124          
    125          
    126          /** @defgroup SDK_EVAL_Button_Private_FunctionPrototypes                        SDK EVAL Button Private Function Prototypes
    127           * @{
    128           */
    129          
    130          /**
    131           * @}
    132           */
    133          
    134          /** @defgroup SDK_EVAL_Button_Private_Functions                                 SDK EVAL Button Private Functions
    135           * @{
    136           */
    137          
    138          
    139          /**
    140           * @brief  Configures Button GPIO and EXTI Line.
    141           * @param  xButton Specifies the Button to be configured.
    142           *         This parameter can be one of following parameters:
    143           *         @arg BUTTON_WAKEUP: Wakeup Push Button
    144           *         @arg BUTTON_TAMPER: Tamper Push Button
    145           *         @arg BUTTON_KEY: Key Push Button
    146           *         @arg BUTTON_RIGHT: Joystick Right Push Button
    147           *         @arg BUTTON_LEFT: Joystick Left Push Button
    148           *         @arg BUTTON_UP: Joystick Up Push Button
    149           *         @arg BUTTON_DOWN: Joystick Down Push Button
    150           *         @arg BUTTON_SEL: Joystick Sel Push Button
    151           * @param  xButtonMode Specifies Button mode.
    152           *         This parameter can be one of following parameters:
    153           *         @arg BUTTON_MODE_GPIO: Button will be used as simple IO
    154           *         @arg BUTTON_MODE_EXTI: Button will be connected to EXTI line with interrupt
    155           *         generation capability
    156           * @retval None.
    157           */

   \                                 In section .text, align 2, keep-with-next
    158          void SdkEvalPushButtonInit(SdkEvalButton xButton, SdkEvalButtonMode xButtonMode)
    159          {  
   \                     SdkEvalPushButtonInit: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    160            s_vectpxButtonPort = s_vectpxButtonPortVersion[SdkEvalGetVersion()];
   \   00000008   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000000C   0x211C             MOVS     R1,#+28
   \   0000000E   0x....             LDR.N    R2,??DataTable1
   \   00000010   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000014   0x....             LDR.N    R1,??DataTable1_1
   \   00000016   0x6008             STR      R0,[R1, #+0]
    161            s_vectnButtonPin = (uint16_t *)s_vectnButtonPinVersion[SdkEvalGetVersion()];
   \   00000018   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000001C   0x210E             MOVS     R1,#+14
   \   0000001E   0x....             LDR.N    R2,??DataTable1_2
   \   00000020   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000024   0x....             LDR.N    R1,??DataTable1_3
   \   00000026   0x6008             STR      R0,[R1, #+0]
    162            s_vectlButtonClk = (uint32_t *)s_vectlButtonClkVersion[SdkEvalGetVersion()];
   \   00000028   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000002C   0x211C             MOVS     R1,#+28
   \   0000002E   0x....             LDR.N    R2,??DataTable1_4
   \   00000030   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000034   0x....             LDR.N    R1,??DataTable1_5
   \   00000036   0x6008             STR      R0,[R1, #+0]
    163            s_vectnButtonExtiLine = (uint16_t *)s_vectnButtonExtiLineVersion[SdkEvalGetVersion()];
   \   00000038   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000003C   0x210E             MOVS     R1,#+14
   \   0000003E   0x....             LDR.N    R2,??DataTable1_6
   \   00000040   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000044   0x....             LDR.N    R1,??DataTable1_7
   \   00000046   0x6008             STR      R0,[R1, #+0]
    164            s_vectnButtonPortSource = (uint16_t *)s_vectnButtonPortSourceVersion[SdkEvalGetVersion()];
   \   00000048   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000004C   0x210E             MOVS     R1,#+14
   \   0000004E   0x....             LDR.N    R2,??DataTable1_8
   \   00000050   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000054   0x....             LDR.N    R1,??DataTable1_9
   \   00000056   0x6008             STR      R0,[R1, #+0]
    165            s_vectnButtonPinSource = (uint16_t *)s_vectnButtonPinSourceVersion[SdkEvalGetVersion()];
   \   00000058   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000005C   0x210E             MOVS     R1,#+14
   \   0000005E   0x....             LDR.N    R2,??DataTable1_10
   \   00000060   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000064   0x....             LDR.N    R1,??DataTable1_11
   \   00000066   0x6008             STR      R0,[R1, #+0]
    166            s_vectnButtonIrqn = (uint16_t *)s_vectnButtonIrqnVersion[SdkEvalGetVersion()];
   \   00000068   0x.... 0x....      BL       SdkEvalGetVersion
   \   0000006C   0x210E             MOVS     R1,#+14
   \   0000006E   0x....             LDR.N    R2,??DataTable1_12
   \   00000070   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000074   0x....             LDR.N    R1,??DataTable1_13
   \   00000076   0x6008             STR      R0,[R1, #+0]
    167            
    168            GPIO_InitTypeDef GPIO_InitStructure;
    169            EXTI_InitTypeDef EXTI_InitStructure;
    170            NVIC_InitTypeDef NVIC_InitStructure;
    171          
    172            /* Enables the BUTTON Clock */
    173            RCC_AHBPeriphClockCmd(s_vectlButtonClk[xButton], ENABLE);
   \   00000078   0x2101             MOVS     R1,#+1
   \   0000007A   0x....             LDR.N    R0,??DataTable1_5
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000080   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000084   0x.... 0x....      BL       RCC_AHBPeriphClockCmd
    174            RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
   \   00000088   0x2101             MOVS     R1,#+1
   \   0000008A   0x2001             MOVS     R0,#+1
   \   0000008C   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
    175          
    176            /* Configures Button pin as input */
    177            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0xF88D 0x0010      STRB     R0,[SP, #+16]
    178            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0xF88D 0x0013      STRB     R0,[SP, #+19]
    179            GPIO_InitStructure.GPIO_Pin = s_vectnButtonPin[xButton];
   \   0000009C   0x....             LDR.N    R0,??DataTable1_3
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A2   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   000000A6   0x9003             STR      R0,[SP, #+12]
    180            GPIO_Init(s_vectpxButtonPort[xButton], &GPIO_InitStructure);
   \   000000A8   0xA903             ADD      R1,SP,#+12
   \   000000AA   0x....             LDR.N    R0,??DataTable1_1
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B0   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   000000B4   0x.... 0x....      BL       GPIO_Init
    181          
    182          
    183            if (xButtonMode == BUTTON_MODE_EXTI)
   \   000000B8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BA   0x2D01             CMP      R5,#+1
   \   000000BC   0xD139             BNE.N    ??SdkEvalPushButtonInit_0
    184            {
    185              /* Connects Button EXTI Line to Button GPIO Pin */
    186              SYSCFG_EXTILineConfig(s_vectnButtonPortSource[xButton], s_vectnButtonPinSource[xButton]);
   \   000000BE   0x....             LDR.N    R0,??DataTable1_11
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C4   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   000000C8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CA   0x....             LDR.N    R0,??DataTable1_9
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D0   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   000000D4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D6   0x.... 0x....      BL       SYSCFG_EXTILineConfig
    187          
    188              /* Configures Button EXTI line */
    189              EXTI_InitStructure.EXTI_Line = s_vectnButtonExtiLine[xButton];
   \   000000DA   0x....             LDR.N    R0,??DataTable1_7
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E0   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   000000E4   0x9001             STR      R0,[SP, #+4]
    190              EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0xF88D 0x0008      STRB     R0,[SP, #+8]
    191              EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
   \   000000EC   0x200C             MOVS     R0,#+12
   \   000000EE   0xF88D 0x0009      STRB     R0,[SP, #+9]
    192              
    193              EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \   000000F2   0x2001             MOVS     R0,#+1
   \   000000F4   0xF88D 0x000A      STRB     R0,[SP, #+10]
    194              EXTI_Init(&EXTI_InitStructure);
   \   000000F8   0xA801             ADD      R0,SP,#+4
   \   000000FA   0x.... 0x....      BL       EXTI_Init
    195          
    196              /* Enables and sets Button EXTI Interrupt to the lowest priority */
    197              NVIC_InitStructure.NVIC_IRQChannel = s_vectnButtonIrqn[xButton];
   \   000000FE   0x....             LDR.N    R0,??DataTable1_13
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000104   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000108   0xF88D 0x0000      STRB     R0,[SP, #+0]
    198              NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = BUTTON_IRQ_PREEMPTION_PRIORITY;
   \   0000010C   0x200F             MOVS     R0,#+15
   \   0000010E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    199              NVIC_InitStructure.NVIC_IRQChannelSubPriority = BUTTON_IRQ_SUB_PRIORITY;
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0xF88D 0x0002      STRB     R0,[SP, #+2]
    200              NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000118   0x2001             MOVS     R0,#+1
   \   0000011A   0xF88D 0x0003      STRB     R0,[SP, #+3]
    201          
    202              EXTI_ClearITPendingBit(s_vectnButtonExtiLine[xButton]);
   \   0000011E   0x....             LDR.N    R0,??DataTable1_7
   \   00000120   0x6800             LDR      R0,[R0, #+0]
   \   00000122   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000124   0xF830 0x0014      LDRH     R0,[R0, R4, LSL #+1]
   \   00000128   0x.... 0x....      BL       EXTI_ClearITPendingBit
    203          
    204              NVIC_Init(&NVIC_InitStructure);
   \   0000012C   0xA800             ADD      R0,SP,#+0
   \   0000012E   0x.... 0x....      BL       NVIC_Init
    205            }
    206          }
   \                     ??SdkEvalPushButtonInit_0: (+1)
   \   00000132   0xB005             ADD      SP,SP,#+20
   \   00000134   0xBD30             POP      {R4,R5,PC}       ;; return
    207          
    208          /**
    209           * @brief  Returns the selected Button state.
    210           * @param  xButton Specifies the Button to be checked.
    211           *         This parameter can be one of following parameters:
    212           *         @arg BUTTON_WAKEUP: Wakeup Push Button
    213           *         @arg BUTTON_TAMPER: Tamper Push Button
    214           *         @arg BUTTON_KEY: Key Push Button
    215           *         @arg BUTTON_RIGHT: Joystick Right Push Button
    216           *         @arg BUTTON_LEFT: Joystick Left Push Button
    217           *         @arg BUTTON_UP: Joystick Up Push Button
    218           *         @arg BUTTON_DOWN: Joystick Down Push Button
    219           *         @arg BUTTON_SEL: Joystick Sel Push Button
    220           * @retval FlagStatus The Button GPIO pin value.
    221           */

   \                                 In section .text, align 2, keep-with-next
    222          FlagStatus SdkEvalPushButtonGetState(SdkEvalButton xButton)
    223          {
   \                     SdkEvalPushButtonGetState: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    224            if(GPIO_ReadInputDataBit(s_vectpxButtonPort[xButton], s_vectnButtonPin[xButton]))
   \   00000004   0x....             LDR.N    R0,??DataTable1_3
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   0000000E   0x....             LDR.N    R0,??DataTable1_1
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000018   0x.... 0x....      BL       GPIO_ReadInputDataBit
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD001             BEQ.N    ??SdkEvalPushButtonGetState_0
    225              return SET;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xE000             B.N      ??SdkEvalPushButtonGetState_1
    226            else
    227              return RESET;
   \                     ??SdkEvalPushButtonGetState_0: (+1)
   \   00000024   0x2000             MOVS     R0,#+0
   \                     ??SdkEvalPushButtonGetState_1: (+1)
   \   00000026   0xBD10             POP      {R4,PC}          ;; return
    228          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     s_vectpxButtonPortVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     s_vectpxButtonPort

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     s_vectnButtonPinVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     s_vectnButtonPin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     s_vectlButtonClkVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     s_vectlButtonClk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     s_vectnButtonExtiLineVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     s_vectnButtonExtiLine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     s_vectnButtonPortSourceVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     s_vectnButtonPortSource

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     s_vectnButtonPinSourceVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     s_vectnButtonPinSource

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     s_vectnButtonIrqnVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     s_vectnButtonIrqn
    229          
    230          
    231          /**
    232           * @}
    233           */
    234          
    235          
    236          /**
    237           * @}
    238           */
    239          
    240          
    241          /**
    242           * @}
    243           */
    244          
    245          
    246          /******************* (C) COPYRIGHT 2012 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   SdkEvalPushButtonGetState
         8   -> GPIO_ReadInputDataBit
      32   SdkEvalPushButtonInit
        32   -> EXTI_ClearITPendingBit
        32   -> EXTI_Init
        32   -> GPIO_Init
        32   -> NVIC_Init
        32   -> RCC_AHBPeriphClockCmd
        32   -> RCC_APB2PeriphClockCmd
        32   -> SYSCFG_EXTILineConfig
        32   -> SdkEvalGetVersion


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      40  SdkEvalPushButtonGetState
     310  SdkEvalPushButtonInit
       4  s_vectlButtonClk
      84  s_vectlButtonClkVersion
       4  s_vectnButtonExtiLine
      44  s_vectnButtonExtiLineVersion
       4  s_vectnButtonIrqn
      44  s_vectnButtonIrqnVersion
       4  s_vectnButtonPin
       4  s_vectnButtonPinSource
      44  s_vectnButtonPinSourceVersion
      44  s_vectnButtonPinVersion
       4  s_vectnButtonPortSource
      44  s_vectnButtonPortSourceVersion
       4  s_vectpxButtonPort
      84  s_vectpxButtonPortVersion

 
  28 bytes in section .bss
  84 bytes in section .data
 304 bytes in section .rodata
 406 bytes in section .text
 
 406 bytes of CODE  memory
 304 bytes of CONST memory
 112 bytes of DATA  memory

Errors: none
Warnings: none
