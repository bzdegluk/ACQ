###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.70.1.5641/W32 for ARM      17/May/2014  17:05:53 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\Application\examples\BasicGeneric\Base_Stati #
#                    on.c                                                     #
#    Command line =  C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\Application\examples\BasicGeneric\Base_Stati #
#                    on.c -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D        #
#                    STM32L1XX_MD -D IAR_ARM_CM3 -D USE_FULL_ASSERT -D        #
#                    SPIRIT_USE_FULL_ASSERT -D USE_SYSTICK_DELAY -D SDK -lC   #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\DZ-SB-DISC01\List\ -o                  #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\DZ-SB-DISC01\Obj\ --no_cse             #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\.\ -I C:\Users\bzdegluk.PLY\Desktop\AC #
#                    Q_SYS\Projekt_po_poprawie_ver01_z_ACQ\2013_11_25_Spirit1 #
#                    _Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application #
#                    \ -I C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_po #
#                    prawie_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1 #
#                    _Library_Project\EWARM\..\Application\examples\ -I       #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\..\Application\runtime\ -I             #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\in #
#                    c\ -I C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_p #
#                    oprawie_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT #
#                    1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\   #
#                    -I C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_popr #
#                    awie_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_L #
#                    ibrary_Project\EWARM\..\SDK_Eval_Util\Source\inc\ -I     #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\S #
#                    ource\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\ -I           #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\S #
#                    ource\STM32L1xx_StdPeriph_Driver\inc\ -I                 #
#                    C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\in #
#                    c\ -I C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_p #
#                    oprawie_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT #
#                    1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device #
#                    _Lib\Source\inc\ -I C:\Users\bzdegluk.PLY\Desktop\ACQ_SY #
#                    S\Projekt_po_poprawie_ver01_z_ACQ\2013_11_25_Spirit1_Ele #
#                    ktrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\ -On        #
#                    --use_c++_inline -I "C:\Program Files (x86)\IAR          #
#                    Systems\Embedded Workbench 6.5\arm\CMSIS\Include\"       #
#    List file    =  C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\DZ-SB-DISC01\List\Base_Station.lst     #
#    Object file  =  C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawi #
#                    e_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Libr #
#                    ary_Project\EWARM\DZ-SB-DISC01\Obj\Base_Station.o        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\bzdegluk.PLY\Desktop\ACQ_SYS\Projekt_po_poprawie_ver01_z_ACQ\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\Application\examples\BasicGeneric\Base_Station.c
      1          /**
      2          * @file    Base_Station.c
      3          * @author  
      4          * @version V0.0.2
      5          * @date    25 November 2013
      6          * @brief   Example of reception (transmission if User Push button pressed)
      7          *          of SPIRIT1 Basic packets.
      8          * 
      9          */
     10          
     11          /* Includes ------------------------------------------------------------------*/
     12          #include "SDK_EVAL_Config.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000004   0x0941             LSRS     R1,R0,#+5
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable7  ;; 0xe000e100
   \   0000000A   0x2301             MOVS     R3,#+1
   \   0000000C   0xF010 0x041F      ANDS     R4,R0,#0x1F
   \   00000010   0x40A3             LSLS     R3,R3,R4
   \   00000012   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return
     13          #include "SPIRIT_Config.h"
     14          #include "SDK_Configuration_Common.h"
     15          #include "SPIRIT_SDK_Application.h"
     16          #include "SPIRIT_Commands.h"
     17          
     18          #define LED_GREEN     LED2 
     19          #define LED_YELLOW    LED1
     20          
     21          #define FALSE 0
     22          #define TRUE !FALSE
     23          
     24          
     25          //#define USE_VCOM  1
     26          //#ifdef USE_VCOM
     27          //#include "SDK_EVAL_VC_General.h"
     28          //#endif
     29          
     30          #define EnableInterrupts()   __set_PRIMASK(0);
     31          #define DisableInterrupts()  __set_PRIMASK(1);
     32          
     33          __ATTRIBUTES void          __set_PRIMASK( unsigned long );
     34          

   \                                 In section .bss, align 1
     35          _Bool PressButtom = FALSE;
   \                     PressButtom:
   \   00000000                      DS8 1
     36          
     37          #undef MY_ADDRESS
     38          #define MY_ADDRESS                  0x44
     39          #undef DESTINATION_ADDRESS
     40          #define DESTINATION_ADDRESS         0x34
     41          
     42          void USART1_Init(void);

   \                                 In section .bss, align 1
     43          uint8_t jednostki, dziesiatki;
   \                     jednostki:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     dziesiatki:
   \   00000000                      DS8 1
     44          
     45          /**
     46            * @brief Radio structure fitting
     47            */

   \                                 In section .data, align 4
     48            SRadioInit xRadioInit = {
   \                     xRadioInit:
   \   00000000   0x0000             DC16 0
   \   00000002   0x00 0x00          DC8 0, 0
   \   00000004   0x33C0EA18         DC32 868280856, 20000
   \              0x00004E20   
   \   0000000C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000010   0x00009621         DC32 38433, 19836, 102115
   \              0x00004D7C   
   \              0x00018EE3   
     49              XTAL_OFFSET_PPM,
     50              BASE_FREQUENCY,
     51              CHANNEL_SPACE,
     52              CHANNEL_NUMBER,
     53              MODULATION_SELECT,
     54              DATARATE,
     55              FREQ_DEVIATION,
     56              BANDWIDTH
     57            };
     58            
     59          /**
     60          * @brief Packet Basic structure fitting
     61          */

   \                                 In section .data, align 4
     62          PktBasicInit xBasicInit={
   \                     xBasicInit:
   \   00000000   0x18 0x06          DC8 24, 6, 0, 0
   \              0x00 0x00    
   \   00000004   0x1A2635A8         DC32 438711720
   \   00000008   0x00 0x07          DC8 0, 7, 32, 0, 0, 0, 1, 0
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x01 0x00    
     63            PREAMBLE_LENGTH,
     64            SYNC_LENGTH,
     65            SYNC_WORD,
     66            LENGTH_TYPE,
     67            LENGTH_WIDTH,
     68            CRC_MODE,
     69            CONTROL_LENGTH,
     70            EN_ADDRESS,
     71            EN_FEC,
     72            EN_WHITENING
     73          };
     74          
     75          
     76          /**
     77          * @brief Address structure fitting
     78          */

   \                                 In section .data, align 4
     79          PktBasicAddressesInit xAddressInit={
   \                     xAddressInit:
   \   00000000   0x00 0x44          DC8 0, 68, 0, 238, 0, 255, 0, 0
   \              0x00 0xEE    
   \              0x00 0xFF    
   \              0x00 0x00    
     80            EN_FILT_MY_ADDRESS,
     81            MY_ADDRESS,
     82            EN_FILT_MULTICAST_ADDRESS,
     83            MULTICAST_ADDRESS,
     84            EN_FILT_BROADCAST_ADDRESS,
     85            BROADCAST_ADDRESS
     86          };
     87          
     88          
     89          /**
     90          * @brief GPIO structure fitting. Change from GPIO_3 to GPIO_0
     91          */

   \                                 In section .data, align 4
     92          SGpioInit xGpioIRQ={
   \                     xGpioIRQ:
   \   00000000   0x05 0x02          DC8 5, 2, 0, 0
   \              0x00 0x00    
     93            SPIRIT_GPIO_0,
     94            SPIRIT_GPIO_MODE_DIGITAL_OUTPUT_LP,
     95            SPIRIT_GPIO_DIG_OUT_IRQ
     96          };
     97          
     98          
     99          /**
    100          * @brief Declare the Tx done flag
    101          */

   \                                 In section .bss, align 1
    102          FlagStatus xTxDoneFlag = RESET;
   \                     xTxDoneFlag:
   \   00000000                      DS8 1
    103          
    104          /**
    105           * @brief Rx buffer declaration: how to store the received data
    106           */

   \                                 In section .bss, align 4
    107          uint8_t vectcRxBuff[212], cRxData;
   \                     vectcRxBuff:
   \   00000000                      DS8 212

   \                                 In section .bss, align 1
   \                     cRxData:
   \   00000000                      DS8 1
    108          
    109          
    110          /**
    111          * @brief IRQ status struct declaration
    112          */

   \                                 In section .bss, align 4
    113          SpiritIrqs xIrqStatus;
   \                     xIrqStatus:
   \   00000000                      DS8 4
    114          
    115          
    116          /**
    117          * @brief Tx buffer declaration: data to transmit
    118          */

   \                                 In section .data, align 4
    119          uint8_t vectcTxBuff[20]={1,1,1,1,2,6,7,8,9,10,11,12,0,14,15,16,0,18,19,1};
   \                     vectcTxBuff:
   \   00000000   0x01 0x01          DC8 1, 1, 1, 1, 2, 6, 7, 8, 9, 10, 11, 12, 0, 14, 15, 16, 0, 18, 19, 1
   \              0x01 0x01    
   \              0x02 0x06    
   \              0x07 0x08    
   \              0x09 0x0A    
   \              0x0B 0x0C    
   \              0x00 0x0E    
   \              0x0F 0x10    
   \              0x00 0x12    
   \              0x13 0x01    
    120          

   \                                 In section .bss, align 4
    121          uint16_t UARTBuff[6]={0};
   \                     UARTBuff:
   \   00000000                      DS8 12
    122          

   \                                 In section .text, align 2, keep-with-next
    123          void M2S_GPIO_0_EXTI_IRQ_HANDLER(void)
    124          {  
   \                     EXTI9_5_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    125              if(EXTI_GetITStatus(M2S_GPIO_0_EXTI_LINE)) // Check the flag status of EXTI line
   \   00000002   0x2020             MOVS     R0,#+32
   \   00000004   0x.... 0x....      BL       EXTI_GetITStatus
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xF000 0x8099      BEQ.W    ??EXTI9_5_IRQHandler_0
    126            {     
    127              SpiritIrqGetStatus(&xIrqStatus); // Get the IRQ status
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000012   0x.... 0x....      BL       SpiritIrqGetStatus
    128              if(xIrqStatus.IRQ_RX_DATA_DISC)  // Check the SPIRIT1 RX_DATA_DISC IRQ flag 
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD002             BEQ.N    ??EXTI9_5_IRQHandler_1
    129              {
    130               SdkEvalLedToggle(LED_YELLOW);  // IRQ: Spirit1 RX data discarded (upon filtering)
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       SdkEvalLedToggle
    131              }
    132              if(xIrqStatus.IRQ_RX_DATA_READY) // Check the SPIRIT1 RX_DATA_READY IRQ Flag 
   \                     ??EXTI9_5_IRQHandler_1: (+1)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD073             BEQ.N    ??EXTI9_5_IRQHandler_2
    133              {
    134               cRxData=SpiritLinearFifoReadNumElementsRxFifo();  // Get the RX FIFO size 
   \   0000003A   0x.... 0x....      BL       SpiritLinearFifoReadNumElementsRxFifo
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000042   0x7008             STRB     R0,[R1, #+0]
    135               
    136                SpiritSpiReadLinearFifo(cRxData, vectcRxBuff); // Read the RX FIFO 
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0x.... 0x....      BL       SdkEvalSpiReadFifo
    137                
    138                SpiritCmdStrobeFlushRxFifo();  // Flush the RX FIFO 
   \   00000052   0x2071             MOVS     R0,#+113
   \   00000054   0x.... 0x....      BL       SpiritCmdStrobeCommand
    139                SdkEvalLedToggle(LED_GREEN);
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       SdkEvalLedToggle
    140                
    141                SpiritCmdStrobeRx(); // RX command - to ensure that Rx device will be ready for the next reception 
   \   0000005E   0x.... 0x....      BL       SpiritManagementWaCmdStrobeRx
   \   00000062   0x2061             MOVS     R0,#+97
   \   00000064   0x.... 0x....      BL       SpiritCmdStrobeCommand
   \   00000068   0x.... 0x....      BL       SpiritManagementWaRxStartup
    142                RSSI_TO_UART();  // Send RSSI Value of received packet to Discovery Board
   \   0000006C   0x.... 0x....      BL       RSSI_TO_UART
    143                ///////////////////////////////////
    144                     USART_SendData(USART1, 'Q');
   \   00000070   0x2151             MOVS     R1,#+81
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   00000076   0x.... 0x....      BL       USART_SendData
    145                while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??EXTI9_5_IRQHandler_3: (+1)
   \   0000007A   0x2180             MOVS     R1,#+128
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   00000080   0x.... 0x....      BL       USART_GetFlagStatus
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD0F8             BEQ.N    ??EXTI9_5_IRQHandler_3
    146                
    147            jednostki = (cRxData%10)+0x30;
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0x210A             MOVS     R1,#+10
   \   00000090   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000094   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000098   0x3030             ADDS     R0,R0,#+48
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable7_5
   \   0000009E   0x7008             STRB     R0,[R1, #+0]
    148            dziesiatki = (cRxData/10)+0x30;
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x210A             MOVS     R1,#+10
   \   000000A8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000AC   0x3030             ADDS     R0,R0,#+48
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable7_6
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
    149            
    150                USART_SendData(USART1, dziesiatki);
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   000000B8   0x7801             LDRB     R1,[R0, #+0]
   \   000000BA   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   000000C0   0x.... 0x....      BL       USART_SendData
    151                while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??EXTI9_5_IRQHandler_4: (+1)
   \   000000C4   0x2180             MOVS     R1,#+128
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   000000CA   0x.... 0x....      BL       USART_GetFlagStatus
   \   000000CE   0x2800             CMP      R0,#+0
   \   000000D0   0xD0F8             BEQ.N    ??EXTI9_5_IRQHandler_4
    152                  USART_SendData(USART1, jednostki);
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   000000D6   0x7801             LDRB     R1,[R0, #+0]
   \   000000D8   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   000000DE   0x.... 0x....      BL       USART_SendData
    153                while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??EXTI9_5_IRQHandler_5: (+1)
   \   000000E2   0x2180             MOVS     R1,#+128
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   000000E8   0x.... 0x....      BL       USART_GetFlagStatus
   \   000000EC   0x2800             CMP      R0,#+0
   \   000000EE   0xD0F8             BEQ.N    ??EXTI9_5_IRQHandler_5
    154            
    155              for(uint8_t i=0 ;i<cRxData ;i++)
   \   000000F0   0x2400             MOVS     R4,#+0
   \                     ??EXTI9_5_IRQHandler_6: (+1)
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000000F6   0x7800             LDRB     R0,[R0, #+0]
   \   000000F8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000FA   0x4284             CMP      R4,R0
   \   000000FC   0xD211             BCS.N    ??EXTI9_5_IRQHandler_2
    156              {
    157                USART_SendData(USART1, vectcRxBuff[i]);
   \   000000FE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000104   0x5C21             LDRB     R1,[R4, R0]
   \   00000106   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   0000010C   0x.... 0x....      BL       USART_SendData
    158                while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??EXTI9_5_IRQHandler_7: (+1)
   \   00000110   0x2180             MOVS     R1,#+128
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable7_4  ;; 0x40013800
   \   00000116   0x.... 0x....      BL       USART_GetFlagStatus
   \   0000011A   0x2800             CMP      R0,#+0
   \   0000011C   0xD0F8             BEQ.N    ??EXTI9_5_IRQHandler_7
    159              }
   \   0000011E   0x1C64             ADDS     R4,R4,#+1
   \   00000120   0xE7E7             B.N      ??EXTI9_5_IRQHandler_6
    160                 //////////////////////////////
    161              }
    162              
    163              if(xIrqStatus.IRQ_TX_DATA_SENT) // Check the SPIRIT TX_DATA_SENT IRQ flag
   \                     ??EXTI9_5_IRQHandler_2: (+1)
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000126   0x7800             LDRB     R0,[R0, #+0]
   \   00000128   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   0000012C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000012E   0x2800             CMP      R0,#+0
   \   00000130   0xD003             BEQ.N    ??EXTI9_5_IRQHandler_8
    164              {
    165                xTxDoneFlag = SET;   // Set the Tx_done_flag to manage the event in the main()
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   00000136   0x2101             MOVS     R1,#+1
   \   00000138   0x7001             STRB     R1,[R0, #+0]
    166              }
    167              
    168              EXTI_ClearITPendingBit(M2S_GPIO_0_EXTI_LINE);  // Clear the EXTI line flag
   \                     ??EXTI9_5_IRQHandler_8: (+1)
   \   0000013A   0x2020             MOVS     R0,#+32
   \   0000013C   0x.... 0x....      BL       EXTI_ClearITPendingBit
    169            
    170            }
    171            
    172             
    173          } // end of M2S_GPIO_0_EXTI_IRQ_HANDLER()
   \                     ??EXTI9_5_IRQHandler_0: (+1)
   \   00000140   0xBD10             POP      {R4,PC}          ;; return
    174          

   \                                 In section .text, align 2, keep-with-next
    175          void main (void)
    176          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    177            
    178            NVIC_SetVectorTable(NVIC_VectTab_FLASH, 0x0000);  // Use STM32L1xx_flash.icf
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0xF05F 0x6000      MOVS     R0,#+134217728
   \   00000008   0x.... 0x....      BL       NVIC_SetVectorTable
    179            RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0xF44F 0x4080      MOV      R0,#+16384
   \   00000012   0x.... 0x....      BL       RCC_APB2PeriphClockCmd
    180            RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
   \   00000016   0x2101             MOVS     R1,#+1
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       RCC_APB1PeriphClockCmd
    181            RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA | RCC_AHBPeriph_GPIOB | \
    182                                  RCC_AHBPeriph_GPIOC | RCC_AHBPeriph_GPIOD | RCC_AHBPeriph_GPIOE, ENABLE );
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x201F             MOVS     R0,#+31
   \   00000022   0x.... 0x....      BL       RCC_AHBPeriphClockCmd
    183          
    184            SdkEvalIdentification();
   \   00000026   0x.... 0x....      BL       SdkEvalIdentification
    185            SdkStartSysTick();
   \   0000002A   0x.... 0x....      BL       SdkStartSysTick
    186            SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);
   \   0000002E   0x2004             MOVS     R0,#+4
   \   00000030   0x.... 0x....      BL       SysTick_CLKSourceConfig
    187            SdkEvalLedInit(LED1);
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      BL       SdkEvalLedInit
    188            SdkEvalLedInit(LED2);
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      BL       SdkEvalLedInit
    189            SdkEvalM2SGpioInit(M2S_GPIO_SDN,M2S_MODE_GPIO_OUT);
   \   00000040   0x2102             MOVS     R1,#+2
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0x.... 0x....      BL       SdkEvalM2SGpioInit
    190            SpiritSpiInit();
   \   00000048   0x.... 0x....      BL       SdkEvalSpiInit
    191            USART1_Init();
   \   0000004C   0x.... 0x....      BL       USART1_Init
    192            
    193          //#ifdef USE_VCOM 
    194          // SdkEvalVCInit(); 
    195          //  while(bDeviceState != CONFIGURED);
    196          //#endif 
    197            
    198            // Spirit ON
    199            SpiritEnterShutdown();
   \   00000050   0x.... 0x....      BL       SdkEvalEnterShutdown
    200            SpiritExitShutdown();
   \   00000054   0x.... 0x....      BL       SdkEvalExitShutdown
    201          
    202            SpiritManagementIdentificationRFBoard();
   \   00000058   0x.... 0x....      BL       SpiritManagementIdentificationRFBoard
    203            SdkEvalM2SGpioInit(M2S_GPIO_0,M2S_MODE_EXTI_IN);
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       SdkEvalM2SGpioInit
    204            
    205            // Spirit IRQ config
    206            SpiritGpioInit(&xGpioIRQ);
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   00000068   0x.... 0x....      BL       SpiritGpioInit
    207            SdkEvalM2SGpioInterruptCmd(M2S_GPIO_0,0x0F,0x0F,ENABLE);
   \   0000006C   0x2301             MOVS     R3,#+1
   \   0000006E   0x220F             MOVS     R2,#+15
   \   00000070   0x210F             MOVS     R1,#+15
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       SdkEvalM2SGpioInterruptCmd
    208            
    209            //*** SdkEvalLedOn(LED1);
    210            // Spirit Radio config
    211            SpiritRadioInit(&xRadioInit);
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable7_9
   \   0000007C   0x.... 0x....      BL       SpiritRadioInit
    212            
    213            // Spirit Packet config
    214            SpiritPktBasicInit(&xBasicInit);
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable7_10
   \   00000084   0x.... 0x....      BL       SpiritPktBasicInit
    215            SpiritPktBasicAddressesInit(&xAddressInit);
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable7_11
   \   0000008C   0x.... 0x....      BL       SpiritPktBasicAddressesInit
    216          
    217            // Spirit IRQs enable
    218            SpiritIrqDeInit(&xIrqStatus);
   \   00000090   0x....             LDR.N    R0,??DataTable7_1
   \   00000092   0x.... 0x....      BL       SpiritIrqDeInit
    219            SpiritIrq(RX_DATA_DISC, S_ENABLE);
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0x2002             MOVS     R0,#+2
   \   0000009A   0x.... 0x....      BL       SpiritIrq
    220            SpiritIrq(RX_DATA_READY, S_ENABLE);
   \   0000009E   0x2101             MOVS     R1,#+1
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0x.... 0x....      BL       SpiritIrq
    221            SpiritIrq(TX_DATA_SENT, S_ENABLE);
   \   000000A6   0x2101             MOVS     R1,#+1
   \   000000A8   0x2004             MOVS     R0,#+4
   \   000000AA   0x.... 0x....      BL       SpiritIrq
    222          
    223            // Declare Lenght of Payload 
    224            SpiritPktBasicSetPayloadLength(PAYLOAD_LENGTH);
   \   000000AE   0x2060             MOVS     R0,#+96
   \   000000B0   0x.... 0x....      BL       SpiritPktBasicSetPayloadLength
    225          
    226            // Enable SQI check
    227            SpiritQiSetSqiThreshold(SQI_TH_0);
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x.... 0x....      BL       SpiritQiSetSqiThreshold
    228            SpiritQiSqiCheck(S_ENABLE);
   \   000000BA   0x2001             MOVS     R0,#+1
   \   000000BC   0x.... 0x....      BL       SpiritQiSqiCheck
    229            
    230            // RX Timeout Configuration
    231            SpiritTimerSetRxTimeoutMs(RX_TIMEOUT);
   \   000000C0   0x....             LDR.N    R0,??DataTable7_12  ;; 0x45bb8000
   \   000000C2   0x.... 0x....      BL       SpiritTimerSetRxTimeoutMs
    232            SpiritTimerSetRxTimeoutStopCondition(SQI_ABOVE_THRESHOLD);
   \   000000C6   0x2002             MOVS     R0,#+2
   \   000000C8   0x.... 0x....      BL       SpiritTimerSetRxTimeoutStopCondition
    233          
    234            // IRQ registers blanking
    235            SpiritIrqClearStatus();
   \   000000CC   0x.... 0x....      BL       SpiritIrqClearStatus
    236            
    237            SpiritCmdStrobeRx();
   \   000000D0   0x.... 0x....      BL       SpiritManagementWaCmdStrobeRx
   \   000000D4   0x2061             MOVS     R0,#+97
   \   000000D6   0x.... 0x....      BL       SpiritCmdStrobeCommand
   \   000000DA   0x.... 0x....      BL       SpiritManagementWaRxStartup
    238          ////////////////////////////////////////////////////////////////////////////////
    239          // 	ErrorStatus HSE_Status;
    240          //	RCC_HSEConfig(RCC_HSE_ON);
    241          //	HSE_Status = RCC_WaitForHSEStartUp();
    242          //	FLASH_SetLatency(FLASH_Latency_1);
    243          //	FLASH_PrefetchBufferCmd(ENABLE);
    244          //	RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);
    245          //	RCC_HCLKConfig(RCC_SYSCLK_Div1);
    246          //	RCC_PLLConfig(RCC_PLLSource_HSE, RCC_PLLMul_12, RCC_PLLDiv_3);
    247          //	RCC_PCLK1Config(RCC_HCLK_Div1);
    248          //	RCC_PCLK2Config(RCC_HCLK_Div1);
    249           ///////////////////////////////////////////////////////////////////////////////// 
    250            
    251            // Start Application
    252            while (1)
    253            {  
    254              // Enter endless loop  
    255              // Rx Command: receive message - if any
    256              SpiritCmdStrobeRx();  // Receive Message
   \                     ??main_0: (+1)
   \   000000DE   0x.... 0x....      BL       SpiritManagementWaCmdStrobeRx
   \   000000E2   0x2061             MOVS     R0,#+97
   \   000000E4   0x.... 0x....      BL       SpiritCmdStrobeCommand
   \   000000E8   0x.... 0x....      BL       SpiritManagementWaRxStartup
    257              
    258              if(PressButtom)
   \   000000EC   0x....             LDR.N    R0,??DataTable7_13
   \   000000EE   0x7800             LDRB     R0,[R0, #+0]
   \   000000F0   0x2800             CMP      R0,#+0
   \   000000F2   0xD0F4             BEQ.N    ??main_0
    259              {  
    260                // Send Message
    261                PressButtom = FALSE;      
   \   000000F4   0x....             LDR.N    R0,??DataTable7_13
   \   000000F6   0x2100             MOVS     R1,#+0
   \   000000F8   0x7001             STRB     R1,[R0, #+0]
    262                SdkDelayMs(RX_TIMEOUT);  // Wait, ensuring that Rx is able to receive 
   \   000000FA   0xF241 0x7070      MOVW     R0,#+6000
   \   000000FE   0x.... 0x....      BL       SdkDelayMs
    263               
    264                // Fill the Tx FIFO
    265                SpiritCmdStrobeFlushTxFifo();
   \   00000102   0x2072             MOVS     R0,#+114
   \   00000104   0x.... 0x....      BL       SpiritCmdStrobeCommand
    266                SpiritSpiWriteLinearFifo(PAYLOAD_LENGTH, vectcTxBuff);
   \   00000108   0x....             LDR.N    R1,??DataTable7_14
   \   0000010A   0x2060             MOVS     R0,#+96
   \   0000010C   0x.... 0x....      BL       SdkEvalSpiWriteFifo
    267                   
    268                // Send the Tx start command, inititaing message transmission
    269                SpiritCmdStrobeTx();
   \   00000110   0x.... 0x....      BL       SpiritManagementWaCmdStrobeTx
   \   00000114   0x2060             MOVS     R0,#+96
   \   00000116   0x.... 0x....      BL       SpiritCmdStrobeCommand
    270           
    271                // Wait for Tx done
    272                while(!xTxDoneFlag);
   \                     ??main_1: (+1)
   \   0000011A   0x....             LDR.N    R0,??DataTable7_7
   \   0000011C   0x7800             LDRB     R0,[R0, #+0]
   \   0000011E   0x2800             CMP      R0,#+0
   \   00000120   0xD0FB             BEQ.N    ??main_1
    273                xTxDoneFlag = RESET;
   \   00000122   0x....             LDR.N    R0,??DataTable7_7
   \   00000124   0x2100             MOVS     R1,#+0
   \   00000126   0x7001             STRB     R1,[R0, #+0]
   \   00000128   0xE7D9             B.N      ??main_0
    274              }
    275            } // End of while(1) endless loop
    276          } // End of main()
    277          

   \                                 In section .text, align 2, keep-with-next
    278          void USART1_Init(void)
    279          {
   \                     USART1_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    280            GPIO_InitTypeDef GPIO_InitStructure;
    281            USART_InitTypeDef USART1_InitStruct;
    282              
    283            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_10 ;
   \   00000004   0xF44F 0x60C0      MOV      R0,#+1536
   \   00000008   0x9000             STR      R0,[SP, #+0]
    284            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
   \   0000000A   0x2002             MOVS     R0,#+2
   \   0000000C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    285            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
   \   00000010   0x2003             MOVS     R0,#+3
   \   00000012   0xF88D 0x0005      STRB     R0,[SP, #+5]
    286            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xF88D 0x0007      STRB     R0,[SP, #+7]
    287            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP; 
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xF88D 0x0006      STRB     R0,[SP, #+6]
    288            GPIO_Init(GPIOA, &GPIO_InitStructure);
   \   00000022   0xA900             ADD      R1,SP,#+0
   \   00000024   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40020000
   \   00000026   0x.... 0x....      BL       GPIO_Init
    289               
    290            GPIO_PinAFConfig(GPIOA, GPIO_PinSource9,GPIO_AF_USART1);
   \   0000002A   0x2207             MOVS     R2,#+7
   \   0000002C   0x2109             MOVS     R1,#+9
   \   0000002E   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40020000
   \   00000030   0x.... 0x....      BL       GPIO_PinAFConfig
    291            GPIO_PinAFConfig(GPIOA, GPIO_PinSource10,GPIO_AF_USART1);  
   \   00000034   0x2207             MOVS     R2,#+7
   \   00000036   0x210A             MOVS     R1,#+10
   \   00000038   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40020000
   \   0000003A   0x.... 0x....      BL       GPIO_PinAFConfig
    292              
    293            /* Baud rate 115200, 8-bit data, One stop bit
    294             * No parity, Do both Rx and Tx, No HW flow control
    295             */
    296            USART1_InitStruct.USART_BaudRate = 115200;   
   \   0000003E   0xF45F 0x30E1      MOVS     R0,#+115200
   \   00000042   0x9002             STR      R0,[SP, #+8]
    297            USART1_InitStruct.USART_WordLength = USART_WordLength_8b;  
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    298            USART1_InitStruct.USART_StopBits = USART_StopBits_1;   
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    299            USART1_InitStruct.USART_Parity = USART_Parity_No ;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0xF8AD 0x0010      STRH     R0,[SP, #+16]
    300            USART1_InitStruct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
   \   00000056   0x200C             MOVS     R0,#+12
   \   00000058   0xF8AD 0x0012      STRH     R0,[SP, #+18]
    301            USART1_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0xF8AD 0x0014      STRH     R0,[SP, #+20]
    302              
    303            // Enable USART1
    304            USART_Cmd(USART1, ENABLE);  
   \   00000062   0x2101             MOVS     R1,#+1
   \   00000064   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   00000066   0x.... 0x....      BL       USART_Cmd
    305              
    306            // Configure USART1
    307            USART_Init(USART1, &USART1_InitStruct);
   \   0000006A   0xA902             ADD      R1,SP,#+8
   \   0000006C   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   0000006E   0x.... 0x....      BL       USART_Init
    308              
    309            // Enable RXNE Interrupt
    310            USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
   \   00000072   0x2201             MOVS     R2,#+1
   \   00000074   0xF240 0x5125      MOVW     R1,#+1317
   \   00000078   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   0000007A   0x.... 0x....      BL       USART_ITConfig
    311              
    312            // Enable USART1 Global Interrupt
    313            NVIC_EnableIRQ(USART1_IRQn);   
   \   0000007E   0x2025             MOVS     R0,#+37
   \   00000080   0x.... 0x....      BL       NVIC_EnableIRQ
    314          } // End of USART1_Init()
   \   00000084   0xB007             ADD      SP,SP,#+28
   \   00000086   0xBD00             POP      {PC}             ;; return
    315          
    316          // Not used in this version

   \                                 In section .text, align 2, keep-with-next
    317          void WUKPIN1_Init(void)
    318          {
   \                     WUKPIN1_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    319            GPIO_InitTypeDef GPIO_InitStructure;
    320            EXTI_InitTypeDef EXTI_InitStructure;
    321            NVIC_InitTypeDef NVIC_InitStructure;
    322            
    323            // To configure PA.00 WakeUp output
    324            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0  ;
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x9001             STR      R0,[SP, #+4]
    325            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF88D 0x000A      STRB     R0,[SP, #+10]
    326            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
   \   0000000E   0x2002             MOVS     R0,#+2
   \   00000010   0xF88D 0x000B      STRB     R0,[SP, #+11]
    327            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;  
   \   00000014   0x2003             MOVS     R0,#+3
   \   00000016   0xF88D 0x0009      STRB     R0,[SP, #+9]
    328            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0xF88D 0x0008      STRB     R0,[SP, #+8]
    329            GPIO_Init( GPIOA, &GPIO_InitStructure);   
   \   00000020   0xA901             ADD      R1,SP,#+4
   \   00000022   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40020000
   \   00000024   0x.... 0x....      BL       GPIO_Init
    330            
    331            // Configure EXT1 Line 0 in interrupt mode trigged on Rising edge 
    332            EXTI_InitStructure.EXTI_Line = EXTI_Line0 ;  // PA0 for User button AND IDD_WakeUP
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x9003             STR      R0,[SP, #+12]
    333            EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0xF88D 0x0010      STRB     R0,[SP, #+16]
    334            EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
   \   00000032   0x2008             MOVS     R0,#+8
   \   00000034   0xF88D 0x0011      STRB     R0,[SP, #+17]
    335            EXTI_InitStructure.EXTI_LineCmd = ENABLE;
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0xF88D 0x0012      STRB     R0,[SP, #+18]
    336            EXTI_Init(&EXTI_InitStructure);
   \   0000003E   0xA803             ADD      R0,SP,#+12
   \   00000040   0x.... 0x....      BL       EXTI_Init
    337            
    338            // Enable and set EXTI0 Interrupt to the lowest priority
    339            NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn ;
   \   00000044   0x2006             MOVS     R0,#+6
   \   00000046   0xF88D 0x0000      STRB     R0,[SP, #+0]
    340            NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
   \   0000004A   0x200F             MOVS     R0,#+15
   \   0000004C   0xF88D 0x0001      STRB     R0,[SP, #+1]
    341            NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
   \   00000050   0x200F             MOVS     R0,#+15
   \   00000052   0xF88D 0x0002      STRB     R0,[SP, #+2]
    342            NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0xF88D 0x0003      STRB     R0,[SP, #+3]
    343            NVIC_Init(&NVIC_InitStructure);
   \   0000005C   0xA800             ADD      R0,SP,#+0
   \   0000005E   0x.... 0x....      BL       NVIC_Init
    344          } // WUKPIN1_Init()
   \   00000062   0xB005             ADD      SP,SP,#+20
   \   00000064   0xBD00             POP      {PC}             ;; return
    345          
    346          

   \                                 In section .text, align 2, keep-with-next
    347          void EXTI0_IRQHandler(void)
    348          {
   \                     EXTI0_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    349             DisableInterrupts();
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0xF380 0x8810      MSR      PRIMASK,R0
    350             PressButtom = TRUE;
   \   00000008   0x....             LDR.N    R0,??DataTable7_13
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
    351             EXTI_ClearITPendingBit(EXTI_Line0);
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       EXTI_ClearITPendingBit
    352             EnableInterrupts();
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xF380 0x8810      MSR      PRIMASK,R0
    353          } // end of EXTI0_IRQHandler()
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    354          
    355          

   \                                 In section .text, align 2, keep-with-next
    356          void convert_into_char(uint32_t number, uint16_t *p_tab)
    357          {
   \                     convert_into_char: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
    358            uint16_t units=0, tens=0, hundreds=0, thousands=0, misc=0;
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x2500             MOVS     R5,#+0
   \   0000000A   0x2600             MOVS     R6,#+0
    359            
    360            units = (((number%10000)%1000)%100)%10;
   \   0000000C   0xF242 0x7710      MOVW     R7,#+10000
   \   00000010   0xFBB0 0xFCF7      UDIV     R12,R0,R7
   \   00000014   0xFB07 0x071C      MLS      R7,R7,R12,R0
   \   00000018   0xF44F 0x7C7A      MOV      R12,#+1000
   \   0000001C   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   00000020   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   00000024   0xF05F 0x0C64      MOVS     R12,#+100
   \   00000028   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   0000002C   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   00000030   0xF05F 0x0C0A      MOVS     R12,#+10
   \   00000034   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   00000038   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   0000003C   0x003A             MOVS     R2,R7
    361            tens = ((((number-units)/10)%1000)%100)%10;
   \   0000003E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000040   0x1A87             SUBS     R7,R0,R2
   \   00000042   0xF05F 0x0C0A      MOVS     R12,#+10
   \   00000046   0xFBB7 0xF7FC      UDIV     R7,R7,R12
   \   0000004A   0xF44F 0x7C7A      MOV      R12,#+1000
   \   0000004E   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   00000052   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   00000056   0xF05F 0x0C64      MOVS     R12,#+100
   \   0000005A   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   0000005E   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   00000062   0xF05F 0x0C0A      MOVS     R12,#+10
   \   00000066   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   0000006A   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   0000006E   0x003B             MOVS     R3,R7
    362            hundreds = (((number-tens-units)/100))%100%10;
   \   00000070   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000072   0x1AC7             SUBS     R7,R0,R3
   \   00000074   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000076   0x1ABF             SUBS     R7,R7,R2
   \   00000078   0xF05F 0x0C64      MOVS     R12,#+100
   \   0000007C   0xFBB7 0xF7FC      UDIV     R7,R7,R12
   \   00000080   0xF05F 0x0C64      MOVS     R12,#+100
   \   00000084   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   00000088   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   0000008C   0xF05F 0x0C0A      MOVS     R12,#+10
   \   00000090   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   00000094   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   00000098   0x003C             MOVS     R4,R7
    363            thousands = ((number-hundreds-tens-units)/1000)%10;
   \   0000009A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000009C   0x1B07             SUBS     R7,R0,R4
   \   0000009E   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000000A0   0x1AFF             SUBS     R7,R7,R3
   \   000000A2   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000A4   0x1ABF             SUBS     R7,R7,R2
   \   000000A6   0xF44F 0x7C7A      MOV      R12,#+1000
   \   000000AA   0xFBB7 0xF7FC      UDIV     R7,R7,R12
   \   000000AE   0xF05F 0x0C0A      MOVS     R12,#+10
   \   000000B2   0xFBB7 0xFEFC      UDIV     LR,R7,R12
   \   000000B6   0xFB0C 0x771E      MLS      R7,R12,LR,R7
   \   000000BA   0x003D             MOVS     R5,R7
    364            misc = ((number-thousands-hundreds-tens-units)/10000);
   \   000000BC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000BE   0x1B47             SUBS     R7,R0,R5
   \   000000C0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000C2   0x1B3F             SUBS     R7,R7,R4
   \   000000C4   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000000C6   0x1AFF             SUBS     R7,R7,R3
   \   000000C8   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000CA   0x1ABF             SUBS     R7,R7,R2
   \   000000CC   0xF242 0x7C10      MOVW     R12,#+10000
   \   000000D0   0xFBB7 0xF7FC      UDIV     R7,R7,R12
   \   000000D4   0x003E             MOVS     R6,R7
    365            
    366            *(p_tab+4) = units + 0x30;
   \   000000D6   0xF112 0x0730      ADDS     R7,R2,#+48
   \   000000DA   0x810F             STRH     R7,[R1, #+8]
    367            *(p_tab+3) = tens + 0x30;
   \   000000DC   0xF113 0x0730      ADDS     R7,R3,#+48
   \   000000E0   0x80CF             STRH     R7,[R1, #+6]
    368            *(p_tab+2) = hundreds + 0x30;
   \   000000E2   0xF114 0x0730      ADDS     R7,R4,#+48
   \   000000E6   0x808F             STRH     R7,[R1, #+4]
    369            *(p_tab+1) = thousands + 0x30;
   \   000000E8   0xF115 0x0730      ADDS     R7,R5,#+48
   \   000000EC   0x804F             STRH     R7,[R1, #+2]
    370            *(p_tab) = misc + 0x30;
   \   000000EE   0xF116 0x0730      ADDS     R7,R6,#+48
   \   000000F2   0x800F             STRH     R7,[R1, #+0]
    371          } // End of convert_into_char(number, *p_tab)
   \   000000F4   0xBDF0             POP      {R4-R7,PC}       ;; return
    372          

   \                                 In section .text, align 2, keep-with-next
    373          void RSSI_TO_UART(void)
    374          {
   \                     RSSI_TO_UART: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    375            float dB_Singal;
    376            
    377            dB_Singal = SpiritQiGetRssidBm();
   \   00000002   0x.... 0x....      BL       SpiritQiGetRssi
   \   00000006   0x3814             SUBS     R0,R0,#+20
   \   00000008   0x.... 0x....      BL       __aeabi_i2f
   \   0000000C   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000010   0x.... 0x....      BL       __aeabi_fdiv
   \   00000014   0x.... 0x....      BL       __aeabi_f2d
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x....             LDR.N    R3,??DataTable7_16  ;; 0xc05e0000
   \   0000001C   0x.... 0x....      BL       __aeabi_dadd
   \   00000020   0x.... 0x....      BL       __aeabi_d2f
   \   00000024   0x0004             MOVS     R4,R0
    378            dB_Singal *= 10;
   \   00000026   0x....             LDR.N    R0,??DataTable7_17  ;; 0x41200000
   \   00000028   0x0021             MOVS     R1,R4
   \   0000002A   0x.... 0x....      BL       __aeabi_fmul
   \   0000002E   0x0004             MOVS     R4,R0
    379            if(dB_Singal < 0)dB_Singal *= (-1);
   \   00000030   0x0020             MOVS     R0,R4
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000038   0xD204             BCS.N    ??RSSI_TO_UART_0
   \   0000003A   0x....             LDR.N    R0,??DataTable7_18  ;; 0xbf800000
   \   0000003C   0x0021             MOVS     R1,R4
   \   0000003E   0x.... 0x....      BL       __aeabi_fmul
   \   00000042   0x0004             MOVS     R4,R0
    380            convert_into_char((uint32_t)dB_Singal, UARTBuff);
   \                     ??RSSI_TO_UART_0: (+1)
   \   00000044   0x....             LDR.N    R1,??DataTable7_19
   \   00000046   0x000D             MOVS     R5,R1
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000004E   0x0029             MOVS     R1,R5
   \   00000050   0x.... 0x....      BL       convert_into_char
    381            UARTBuff[5] = 'B';
   \   00000054   0x....             LDR.N    R0,??DataTable7_19
   \   00000056   0x2142             MOVS     R1,#+66
   \   00000058   0x8141             STRH     R1,[R0, #+10]
    382            UARTBuff[4] = 'd';
   \   0000005A   0x....             LDR.N    R0,??DataTable7_19
   \   0000005C   0x2164             MOVS     R1,#+100
   \   0000005E   0x8101             STRH     R1,[R0, #+8]
    383            UARTBuff[0] = '-';
   \   00000060   0x....             LDR.N    R0,??DataTable7_19
   \   00000062   0x212D             MOVS     R1,#+45
   \   00000064   0x8001             STRH     R1,[R0, #+0]
    384            if(UARTBuff[1] == '0')
   \   00000066   0x....             LDR.N    R0,??DataTable7_19
   \   00000068   0x8840             LDRH     R0,[R0, #+2]
   \   0000006A   0x2830             CMP      R0,#+48
   \   0000006C   0xD105             BNE.N    ??RSSI_TO_UART_1
    385            {
    386              UARTBuff[1]='-';
   \   0000006E   0x....             LDR.N    R0,??DataTable7_19
   \   00000070   0x212D             MOVS     R1,#+45
   \   00000072   0x8041             STRH     R1,[R0, #+2]
    387              UARTBuff[0]=' ';
   \   00000074   0x....             LDR.N    R0,??DataTable7_19
   \   00000076   0x2120             MOVS     R1,#+32
   \   00000078   0x8001             STRH     R1,[R0, #+0]
    388            }  
    389            // Sent RSSI string - between Start and End Event Markers
    390            USART_SendData(USART1, 'S');  // Start Event Marker
   \                     ??RSSI_TO_UART_1: (+1)
   \   0000007A   0x2153             MOVS     R1,#+83
   \   0000007C   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   0000007E   0x.... 0x....      BL       USART_SendData
    391            while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??RSSI_TO_UART_2: (+1)
   \   00000082   0x2180             MOVS     R1,#+128
   \   00000084   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   00000086   0x.... 0x....      BL       USART_GetFlagStatus
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xD0F9             BEQ.N    ??RSSI_TO_UART_2
    392            for(uint8_t i=0 ;i<6 ;i++)
   \   0000008E   0x2500             MOVS     R5,#+0
   \                     ??RSSI_TO_UART_3: (+1)
   \   00000090   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000092   0x2D06             CMP      R5,#+6
   \   00000094   0xDA0E             BGE.N    ??RSSI_TO_UART_4
    393              {
    394                USART_SendData(USART1, UARTBuff[i]);
   \   00000096   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000098   0x....             LDR.N    R0,??DataTable7_19
   \   0000009A   0xF830 0x1015      LDRH     R1,[R0, R5, LSL #+1]
   \   0000009E   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   000000A0   0x.... 0x....      BL       USART_SendData
    395                while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
   \                     ??RSSI_TO_UART_5: (+1)
   \   000000A4   0x2180             MOVS     R1,#+128
   \   000000A6   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   000000A8   0x.... 0x....      BL       USART_GetFlagStatus
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD0F9             BEQ.N    ??RSSI_TO_UART_5
    396              }
   \   000000B0   0x1C6D             ADDS     R5,R5,#+1
   \   000000B2   0xE7ED             B.N      ??RSSI_TO_UART_3
    397            USART_SendData(USART1, 'E'); // End Event Marker
   \                     ??RSSI_TO_UART_4: (+1)
   \   000000B4   0x2145             MOVS     R1,#+69
   \   000000B6   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40013800
   \   000000B8   0x.... 0x....      BL       USART_SendData
    398          } // End of RSSI_TO_UART()
   \   000000BC   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    399          
    400          #ifdef USE_FULL_ASSERT
    401          /**
    402          * @brief  Reports the name of the source file and the source line number
    403          *         where the assert_param error has occurred.
    404          * @param file: pointer to the source file name
    405          * @param line: assert_param error line source number
    406          * @retval : None
    407          */

   \                                 In section .text, align 2, keep-with-next
    408            void assert_failed(uint8_t* file, uint32_t line)
    409            {
   \                     assert_failed: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    410              // User can add his own implementation to report the file name and line number
    411              printf("Wrong parameters value: file %s on line %d\r\n", file, line);
   \   00000006   0x002A             MOVS     R2,R5
   \   00000008   0x0021             MOVS     R1,R4
   \   0000000A   0x....             LDR.N    R0,??DataTable7_20
   \   0000000C   0x.... 0x....      BL       printf
    412            
    413              // Enter Infinite Loop
    414              while (1)
   \                     ??assert_failed_0: (+1)
   \   00000010   0xE7FE             B.N      ??assert_failed_0
    415              {
    416                // Endless loop
    417              }
    418            } // end of assert_failed(file, line)

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     xIrqStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     cRxData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     vectcRxBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x40013800         DC32     0x40013800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     jednostki

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     dziesiatki

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     xTxDoneFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     xGpioIRQ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x........         DC32     xRadioInit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     xBasicInit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     xAddressInit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x45BB8000         DC32     0x45bb8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     PressButtom

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     vectcTxBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0xC05E0000         DC32     0xc05e0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x........         DC32     UARTBuff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x........         DC32     `?<Constant "Wrong parameters valu...">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "Wrong parameters valu...">`:
   \   00000000   0x57 0x72          DC8 "Wrong parameters value: file %s on line %d\015\012"
   \              0x6F 0x6E    
   \              0x67 0x20    
   \              0x70 0x61    
   \              0x72 0x61    
   \              0x6D 0x65    
   \              0x74 0x65    
   \              0x72 0x73    
   \              0x20 0x76    
   \              0x61 0x6C    
   \              0x75 0x65    
   \              0x3A 0x20    
   \              0x66 0x69    
   \              0x6C 0x65    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x6F 0x6E    
   \              0x20 0x6C    
   \              0x69 0x6E    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000002D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    419          #endif  // USE_FULL_ASSERT
    420          
    421          /**************** (C) COPYRIGHT 2013 DiZiC Ltd. ********* END OF FILE *********/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   EXTI0_IRQHandler
         8   -> EXTI_ClearITPendingBit
       8   EXTI9_5_IRQHandler
         8   -> EXTI_ClearITPendingBit
         8   -> EXTI_GetITStatus
         8   -> RSSI_TO_UART
         8   -> SdkEvalLedToggle
         8   -> SdkEvalSpiReadFifo
         8   -> SpiritCmdStrobeCommand
         8   -> SpiritIrqGetStatus
         8   -> SpiritLinearFifoReadNumElementsRxFifo
         8   -> SpiritManagementWaCmdStrobeRx
         8   -> SpiritManagementWaRxStartup
         8   -> USART_GetFlagStatus
         8   -> USART_SendData
       4   NVIC_EnableIRQ
      16   RSSI_TO_UART
        16   -> SpiritQiGetRssi
        16   -> USART_GetFlagStatus
        16   -> USART_SendData
        16   -> __aeabi_cfcmple
        16   -> __aeabi_d2f
        16   -> __aeabi_dadd
        16   -> __aeabi_f2d
        16   -> __aeabi_f2uiz
        16   -> __aeabi_fdiv
        16   -> __aeabi_fmul
        16   -> __aeabi_i2f
        16   -> convert_into_char
      32   USART1_Init
        32   -> GPIO_Init
        32   -> GPIO_PinAFConfig
        32   -> NVIC_EnableIRQ
        32   -> USART_Cmd
        32   -> USART_ITConfig
        32   -> USART_Init
      24   WUKPIN1_Init
        24   -> EXTI_Init
        24   -> GPIO_Init
        24   -> NVIC_Init
      16   assert_failed
        16   -> printf
      20   convert_into_char
       8   main
         8   -> NVIC_SetVectorTable
         8   -> RCC_AHBPeriphClockCmd
         8   -> RCC_APB1PeriphClockCmd
         8   -> RCC_APB2PeriphClockCmd
         8   -> SdkDelayMs
         8   -> SdkEvalEnterShutdown
         8   -> SdkEvalExitShutdown
         8   -> SdkEvalIdentification
         8   -> SdkEvalLedInit
         8   -> SdkEvalM2SGpioInit
         8   -> SdkEvalM2SGpioInterruptCmd
         8   -> SdkEvalSpiInit
         8   -> SdkEvalSpiWriteFifo
         8   -> SdkStartSysTick
         8   -> SpiritCmdStrobeCommand
         8   -> SpiritGpioInit
         8   -> SpiritIrq
         8   -> SpiritIrqClearStatus
         8   -> SpiritIrqDeInit
         8   -> SpiritManagementIdentificationRFBoard
         8   -> SpiritManagementWaCmdStrobeRx
         8   -> SpiritManagementWaCmdStrobeTx
         8   -> SpiritManagementWaRxStartup
         8   -> SpiritPktBasicAddressesInit
         8   -> SpiritPktBasicInit
         8   -> SpiritPktBasicSetPayloadLength
         8   -> SpiritQiSetSqiThreshold
         8   -> SpiritQiSqiCheck
         8   -> SpiritRadioInit
         8   -> SpiritTimerSetRxTimeoutMs
         8   -> SpiritTimerSetRxTimeoutStopCondition
         8   -> SysTick_CLKSourceConfig
         8   -> USART1_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      48  ?<Constant "Wrong parameters valu...">
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      28  EXTI0_IRQHandler
     322  EXTI9_5_IRQHandler
      26  NVIC_EnableIRQ
       1  PressButtom
     190  RSSI_TO_UART
      12  UARTBuff
     136  USART1_Init
     102  WUKPIN1_Init
      18  assert_failed
       1  cRxData
     246  convert_into_char
       1  dziesiatki
       1  jednostki
     298  main
     212  vectcRxBuff
      20  vectcTxBuff
       8  xAddressInit
      16  xBasicInit
       4  xGpioIRQ
       4  xIrqStatus
      28  xRadioInit
       1  xTxDoneFlag

 
   233 bytes in section .bss
    76 bytes in section .data
    48 bytes in section .rodata
 1 450 bytes in section .text
 
 1 450 bytes of CODE  memory
    48 bytes of CONST memory
   309 bytes of DATA  memory

Errors: none
Warnings: none
