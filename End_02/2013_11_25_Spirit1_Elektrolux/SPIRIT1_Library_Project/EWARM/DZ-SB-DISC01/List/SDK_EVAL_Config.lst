###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        20/Nov/2015  05:04:37
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Config.c
#    Command line =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Config.c
#        -D USE_STDPERIPH_DRIVER -D VECT_TAB_FLASH -D STM32L1XX_MD -D
#        IAR_ARM_CM3 -D USE_FULL_ASSERT -D SPIRIT_USE_FULL_ASSERT -D
#        USE_SYSTICK_DELAY -D SDK -lC
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\
#        -o
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\.\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\examples\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\Application\runtime\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Eval_STM32L\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SPIRIT1_Library\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\SDK_Eval_Util\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\CMSIS\CM3\DeviceSupport\ST\STM32L1xx\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32L1xx_StdPeriph_Lib\Source\STM32L1xx_StdPeriph_Driver\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\SDK_Virtual_Com\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\..\STM32L\STM32_USB-FS-Device_Lib\Source\inc\
#        -I
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\..\ACQ\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.2\arm\CMSIS\Include\"
#    List file    =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\List\SDK_EVAL_Config.lst
#    Object file  =  
#        E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\SPIRIT1_Library_Project\EWARM\DZ-SB-DISC01\Obj\SDK_EVAL_Config.o
#
###############################################################################

E:\ACQ\Proj_ver09a_15102015\End_02\2013_11_25_Spirit1_Elektrolux\STM32L\SDK_Eval_STM32L\Source\src\SDK_EVAL_Config.c
      1          /**
      2           * @file    SDK_EVAL_Config.c
      3           * @author  High End Analog & RF BU - AMS / ART Team IMS-Systems Lab
      4           * @version V3.0.0
      5           * @date    August 7, 2012
      6           * @brief   This file provides all the low level API to manage SDK Version identification.
      7           * @details
      8           *
      9           * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     10           * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     11           * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     12           * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     13           * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     14           * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     15           *
     16           * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
     17           * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
     18           * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
     19           *
     20           * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     21           */
     22          
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "SDK_EVAL_Config.h"
     26          
     27          /** @addtogroup SDK_EVAL_STM32L
     28           * @{
     29           */
     30          
     31          
     32          /** @addtogroup SDK_EVAL_Config
     33           * @{
     34           */
     35          
     36          /** @defgroup SDK_EVAL_Config_Private_TypesDefinitions             SDK EVAL Config Private Types Definitions
     37           * @{
     38           */
     39          
     40          /**
     41           * @}
     42           */
     43          
     44          
     45          /** @defgroup SDK_EVAL_Config_Private_Defines                      SDK EVAL Config Private Defines
     46           * @{
     47           */
     48          
     49          /**
     50           * @}
     51           */
     52          
     53          
     54          /** @defgroup SDK_EVAL_Config_Private_Macros                       SDK EVAL Config Private Macros
     55           * @{
     56           */
     57          
     58          /**
     59           * @}
     60           */
     61          
     62          
     63          /** @defgroup SDK_EVAL_Config_Private_Variables                    SDK EVAL Config Private Variables
     64           * @{
     65           */
     66          /**
     67           * @}
     68           */
     69          
     70          
     71          /**
     72           * @defgroup SDK_EVAL_Config_Private_FunctionPrototypes                    SDK EVAL Config Private Function Prototypes
     73           * @{
     74           */
     75          
     76          /**
     77           * @}
     78           */
     79          
     80          
     81          /**
     82           * @defgroup SDK_EVAL_Config_Private_Functions                             SDK EVAL Config Private Functions
     83           * @{
     84           */
     85             
     86                                                
     87          #define SdkEvalPb6Init                 { RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOB, ENABLE); \
     88                                                              GPIO_Init(GPIOB, &(GPIO_InitTypeDef){GPIO_Pin_6, GPIO_Mode_IN, GPIO_Speed_40MHz, GPIO_OType_PP, GPIO_PuPd_NOPULL}); \
     89                                                            }
     90          
     91          #define SdkEvalGetPb6           {(GPIO_ReadInputData(GPIOB) & GPIO_Pin_6)}
     92          

   \                                 In section .data, align 1
     93          static uint8_t s_SdkEvalVersion = SDK_EVAL_VERSION_3;
   \                     s_SdkEvalVersion:
   \   00000000   0x01               DC8 1
     94          
     95          
     96          /**
     97           * @brief  Identifies the current motherboard.
     98           * @param  None.
     99           * @retval None.
    100           */

   \                                 In section .text, align 2, keep-with-next
    101          void SdkEvalIdentification(void)
    102          {
   \                     SdkEvalIdentification: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    103            GPIO_InitTypeDef GPIO_InitStructure; 
    104            
    105            /* Enables the MCU GPIO Clock */
    106            RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOE, ENABLE);  
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x2010             MOVS     R0,#+16
   \   00000006   0x.... 0x....      BL       RCC_AHBPeriphClockCmd
    107            
    108            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0xF88D 0x0008      STRB     R0,[SP, #+8]
    109            GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF88D 0x000B      STRB     R0,[SP, #+11]
    110            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_40MHz;
   \   00000016   0x2003             MOVS     R0,#+3
   \   00000018   0xF88D 0x0009      STRB     R0,[SP, #+9]
    111            GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xF88D 0x000A      STRB     R0,[SP, #+10]
    112            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
   \   00000022   0x2002             MOVS     R0,#+2
   \   00000024   0x9001             STR      R0,[SP, #+4]
    113            GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   00000026   0xA901             ADD      R1,SP,#+4
   \   00000028   0x....             LDR.N    R0,??DataTable1  ;; 0x40021000
   \   0000002A   0x.... 0x....      BL       GPIO_Init
    114            
    115            GPIOE->ODR |= GPIO_Pin_1;
   \   0000002E   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40021014
   \   00000030   0x8800             LDRH     R0,[R0, #+0]
   \   00000032   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000036   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40021014
   \   00000038   0x8008             STRH     R0,[R1, #+0]
    116            
    117            for(volatile uint8_t i=0;i<1;i++);
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \                     ??SdkEvalIdentification_0: (+1)
   \   00000040   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD105             BNE.N    ??SdkEvalIdentification_1
   \   00000048   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000004C   0x1C40             ADDS     R0,R0,#+1
   \   0000004E   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000052   0xE7F5             B.N      ??SdkEvalIdentification_0
    118            
    119            if((GPIOE->IDR) & GPIO_Pin_1) {
   \                     ??SdkEvalIdentification_1: (+1)
   \   00000054   0x....             LDR.N    R0,??DataTable1_2  ;; 0x40021010
   \   00000056   0x8800             LDRH     R0,[R0, #+0]
   \   00000058   0x0780             LSLS     R0,R0,#+30
   \   0000005A   0xD503             BPL.N    ??SdkEvalIdentification_2
    120              s_SdkEvalVersion = SDK_EVAL_VERSION_2_1;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x....             LDR.N    R1,??DataTable1_3
   \   00000060   0x7008             STRB     R0,[R1, #+0]
   \   00000062   0xE035             B.N      ??SdkEvalIdentification_3
    121            } else 
    122            {
    123              RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOD, ENABLE);
   \                     ??SdkEvalIdentification_2: (+1)
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0x2008             MOVS     R0,#+8
   \   00000068   0x.... 0x....      BL       RCC_AHBPeriphClockCmd
    124              GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
   \   0000006C   0x2004             MOVS     R0,#+4
   \   0000006E   0x9001             STR      R0,[SP, #+4]
    125              GPIO_Init(GPIOD, &GPIO_InitStructure);
   \   00000070   0xA901             ADD      R1,SP,#+4
   \   00000072   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40020c00
   \   00000074   0x.... 0x....      BL       GPIO_Init
    126              
    127              GPIOD->ODR |= GPIO_Pin_2;
   \   00000078   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40020c14
   \   0000007A   0x8800             LDRH     R0,[R0, #+0]
   \   0000007C   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000080   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40020c14
   \   00000082   0x8008             STRH     R0,[R1, #+0]
    128              
    129              for(volatile uint8_t i=0;i<1;i++);
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \                     ??SdkEvalIdentification_4: (+1)
   \   0000008A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000008E   0x2800             CMP      R0,#+0
   \   00000090   0xD105             BNE.N    ??SdkEvalIdentification_5
   \   00000092   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000096   0x1C40             ADDS     R0,R0,#+1
   \   00000098   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   0000009C   0xE7F5             B.N      ??SdkEvalIdentification_4
    130              
    131              if((GPIOD->IDR) & GPIO_Pin_2) {
   \                     ??SdkEvalIdentification_5: (+1)
   \   0000009E   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40020c10
   \   000000A0   0x8800             LDRH     R0,[R0, #+0]
   \   000000A2   0x0740             LSLS     R0,R0,#+29
   \   000000A4   0xD503             BPL.N    ??SdkEvalIdentification_6
    132                s_SdkEvalVersion = SDK_EVAL_VERSION_3;
   \   000000A6   0x2001             MOVS     R0,#+1
   \   000000A8   0x....             LDR.N    R1,??DataTable1_3
   \   000000AA   0x7008             STRB     R0,[R1, #+0]
   \   000000AC   0xE002             B.N      ??SdkEvalIdentification_7
    133              }
    134              else {
    135                s_SdkEvalVersion = SDK_EVAL_VERSION_D1;
   \                     ??SdkEvalIdentification_6: (+1)
   \   000000AE   0x2002             MOVS     R0,#+2
   \   000000B0   0x....             LDR.N    R1,??DataTable1_3
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
    136              }
    137              
    138              GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \                     ??SdkEvalIdentification_7: (+1)
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0xF88D 0x0008      STRB     R0,[SP, #+8]
    139              GPIO_Init(GPIOD, &GPIO_InitStructure);
   \   000000BA   0xA901             ADD      R1,SP,#+4
   \   000000BC   0x....             LDR.N    R0,??DataTable1_4  ;; 0x40020c00
   \   000000BE   0x.... 0x....      BL       GPIO_Init
    140              
    141              GPIOD->ODR &= ~GPIO_Pin_2;
   \   000000C2   0x....             LDR.N    R0,??DataTable1_5  ;; 0x40020c14
   \   000000C4   0x8800             LDRH     R0,[R0, #+0]
   \   000000C6   0xF64F 0x71FB      MOVW     R1,#+65531
   \   000000CA   0x4008             ANDS     R0,R1,R0
   \   000000CC   0x....             LDR.N    R1,??DataTable1_5  ;; 0x40020c14
   \   000000CE   0x8008             STRH     R0,[R1, #+0]
    142            }
    143            
    144            GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
   \                     ??SdkEvalIdentification_3: (+1)
   \   000000D0   0x2002             MOVS     R0,#+2
   \   000000D2   0x9001             STR      R0,[SP, #+4]
    145            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0xF88D 0x0008      STRB     R0,[SP, #+8]
    146            GPIO_Init(GPIOE, &GPIO_InitStructure);
   \   000000DA   0xA901             ADD      R1,SP,#+4
   \   000000DC   0x....             LDR.N    R0,??DataTable1  ;; 0x40021000
   \   000000DE   0x.... 0x....      BL       GPIO_Init
    147            
    148            GPIOE->ODR &= ~GPIO_Pin_1;
   \   000000E2   0x....             LDR.N    R0,??DataTable1_1  ;; 0x40021014
   \   000000E4   0x8800             LDRH     R0,[R0, #+0]
   \   000000E6   0xF64F 0x71FD      MOVW     R1,#+65533
   \   000000EA   0x4008             ANDS     R0,R1,R0
   \   000000EC   0x....             LDR.N    R1,??DataTable1_1  ;; 0x40021014
   \   000000EE   0x8008             STRH     R0,[R1, #+0]
    149          }
   \   000000F0   0xBD07             POP      {R0-R2,PC}       ;; return
    150          
    151          
    152          /**
    153           * @brief  Returns the version of the current motherboard.
    154           * @param  None.
    155           * @retval None.
    156           */

   \                                 In section .text, align 2, keep-with-next
    157          uint8_t SdkEvalGetVersion(void)
    158          {
    159           return s_SdkEvalVersion;
   \                     SdkEvalGetVersion: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1_3
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    160          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40021014         DC32     0x40021014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40021010         DC32     0x40021010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     s_SdkEvalVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x40020C14         DC32     0x40020c14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40020C10         DC32     0x40020c10
    161          
    162          /**
    163           * @}
    164           */
    165          
    166          /**
    167           * @}
    168           */
    169          
    170          /**
    171           * @}
    172           */
    173          
    174          
    175          
    176          /******************* (C) COPYRIGHT 2012 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SdkEvalGetVersion
      16   SdkEvalIdentification
        16   -> GPIO_Init
        16   -> RCC_AHBPeriphClockCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       6  SdkEvalGetVersion
     242  SdkEvalIdentification
       1  s_SdkEvalVersion

 
   1 byte  in section .data
 276 bytes in section .text
 
 276 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
